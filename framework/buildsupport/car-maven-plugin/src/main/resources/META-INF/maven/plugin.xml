<?xml version="1.0" encoding="UTF-8"?>
<plugin>
  <name>Geronimo Build Support :: CAR</name>
  <description>The car-maven-plugin handles all aspects of &quot;predeploying&quot; a module into a Geronimo car file and installing car
        files into a Geronimo server.
        As part of this it processes plan files to include the module Id and dependencies, and generates
        geronimo-plugin.xml metadata files and
        manages a geronimo-plugins.xml catalog in the local maven repository.</description>
  <groupId>org.apache.geronimo.buildsupport</groupId>
  <artifactId>car-maven-plugin</artifactId>
  <version>3.0-SNAPSHOT</version>
  <goalPrefix>car</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
<!-- mojo borrowed from karaf -->
    <mojo>
      <goal>install-kars</goal>
      <description>Installs kar dependencies into a server-under-construction in target/assembly</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-resources</phase>
      <implementation>org.apache.karaf.tooling.features.InstallKarsMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>bootFeatures</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of features from runtime-scope features xml and kars to be installed into local-repo and listed in features service boot features.</description>
        </parameter>
        <parameter>
          <name>defaultStartLevel</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>default start level for bundles in features that dont&apos; specify it</description>
        </parameter>
        <parameter>
          <name>featureArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifact type of a feature</description>
        </parameter>
        <parameter>
          <name>featuresCfgFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>features config file.</description>
        </parameter>
        <parameter>
          <name>installedFeatures</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of features from runtime-scope features xml and kars to be installed into local-repo and not mentioned elsewhere.</description>
        </parameter>
        <parameter>
          <name>localRepo</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>remoteRepos</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>The project&apos;s remote repositories to use for the resolution of plugins and their dependencies.</description>
        </parameter>
        <parameter>
          <name>repoSession</name>
          <type>org.sonatype.aether.RepositorySystemSession</type>
          <required>false</required>
          <editable>false</editable>
          <description>The current repository/network configuration of Maven.</description>
        </parameter>
        <parameter>
          <name>startupFeatures</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of features from runtime-scope features xml and kars to be installed into system and listed in startup.properties.</description>
        </parameter>
        <parameter>
          <name>startupPropertiesFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>startup.properties file.</description>
        </parameter>
        <parameter>
          <name>systemDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory that resources are copied to during the build.</description>
        </parameter>
        <parameter>
          <name>workDirectory</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory that resources are copied to during the build.</description>
        </parameter>
      </parameters>
      <configuration>
        <featureArtifactType implementation="java.lang.String" default-value="xml"/>
        <featuresCfgFile implementation="java.io.File">${project.build.directory}/assembly/etc/org.apache.karaf.features.cfg</featuresCfgFile>
        <localRepo implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <remoteRepos implementation="java.util.List" default-value="${project.remoteProjectRepositories}"/>
        <repoSession implementation="org.sonatype.aether.RepositorySystemSession" default-value="${repositorySystemSession}"/>
        <startupPropertiesFile implementation="java.io.File">${project.build.directory}/assembly/etc/startup.properties</startupPropertiesFile>
        <systemDirectory implementation="java.io.File">${project.build.directory}/assembly/system</systemDirectory>
        <workDirectory implementation="java.lang.String">${project.build.directory}/assembly</workDirectory>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>factory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.sonatype.aether.RepositorySystem</role>
          <field-name>repoSystem</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
      </requirements>
    </mojo>
<!-- mojos actually in geronimo, regenerate if any changes made to metadata -->     
    <mojo>
      <goal>create-pluginlist</goal>
      <description>Creates or replaces a geronimo-plugins.xml catalog of geronimo plugins in the local maven repository. Although geronimo-plugins.xml is
maintained automatically when you build geronimo plugins locally, this is useful if you have downloaded plugins from elsewhere or
corrupted the geronimo-plugins.xml file. This must be run explcitly using the command line
mvn org.apache.geronimo.buildsupport:car-maven-plugin:create-pluginlist</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.CreatePluginListMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>install-modules</goal>
      <description>Installs Geronimo module CAR files into a target repository to support assembly.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.InstallModulesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifact</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configuration to be installed specified as groupId/artifactId/version/type
if none specified, plugin will install all dependencies of type &quot;car&quot;</description>
        </parameter>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>explicitResolutionProperties</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The location where the properties mapping will be generated.</description>
        </parameter>
        <parameter>
          <name>installedPluginsList</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The location of the target config files.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>overrides</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>overridesDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>servers</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>ServerInstance specific in plugin configuration, to specify where config.xml and properties updates go.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sourceRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of the source repository for the dependencies</description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>targetConfigPath</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The location of the target config files.</description>
        </parameter>
        <parameter>
          <name>targetRepositoryPath</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The location of the target repository.</description>
        </parameter>
        <parameter>
          <name>targetServerDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The location of the server repository.</description>
        </parameter>
      </parameters>
      <configuration>
        <targetServerDirectory implementation="java.io.File">${project.build.directory}/assembly</targetServerDirectory>
        <overridesDir implementation="java.io.File">${project.build.directory}/classes/var/config/overrides</overridesDir>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <installedPluginsList implementation="java.lang.String">var/config/installed-plugins.properties</installedPluginsList>
        <targetConfigPath implementation="java.lang.String">var/config</targetConfigPath>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <explicitResolutionProperties implementation="java.io.File">${project.build.directory}/explicit-versions.properties</explicitResolutionProperties>
        <sourceRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</sourceRepository>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <targetRepositoryPath implementation="java.lang.String">system</targetRepositoryPath>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>verify-no-dependency-change</goal>
      <description>Check if the dependencies have changed</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.DependencyChangeMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>dependencies</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Dependencies explicitly listed in the car-maven-plugin configuration</description>
        </parameter>
        <parameter>
          <name>dependencyFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of existing dependency file.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>filteredDependencyFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of filtered dependency file.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>logDependencyChanges</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to show changed dependencies in log</description>
        </parameter>
        <parameter>
          <name>overwriteChangedDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to overwrite dependencies.xml if it has changed</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>useMavenDependencies</name>
          <type>org.apache.geronimo.mavenplugins.car.UseMavenDependencies</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configuration of use of maven dependencies. If missing or if value element is false, use the explicit list in the car-maven-plugin configuration.
If present and true, use the maven dependencies in the current pom file of scope null, runtime, or compile. In addition, the version of the maven
dependency can be included or not depending on the includeVersion element.</description>
        </parameter>
        <parameter>
          <name>warnOnDependencyChange</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether to fail on changed dependencies</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <filteredDependencyFile implementation="java.io.File">${basedir}/target/history/dependencies.xml</filteredDependencyFile>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <dependencyFile implementation="java.io.File">${basedir}/src/main/history/dependencies.xml</dependencyFile>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-plan</goal>
      <description>Add module id and dependencies to a plan and process with velocity</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.PlanProcessorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>boot</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>whether this is a boot bundle (starts kernel, and the config) or a normal plugin bundle.</description>
        </parameter>
        <parameter>
          <name>dependencies</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Dependencies explicitly listed in the car-maven-plugin configuration</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>filteredPlanFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>we copy the plan here for filtering, then add env stuff.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>sourceFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of unproccesed plan, normally missing moduleId and dependencies.</description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>targetDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory to put the processed plan in.</description>
        </parameter>
        <parameter>
          <name>targetFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>XXX</description>
        </parameter>
        <parameter>
          <name>useMavenDependencies</name>
          <type>org.apache.geronimo.mavenplugins.car.UseMavenDependencies</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configuration of use of maven dependencies. If missing or if value element is false, use the explicit list in the car-maven-plugin configuration.
If present and true, use the maven dependencies in the current pom file of scope null, runtime, or compile. In addition, the version of the maven
dependency can be included or not depending on the includeVersion element.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <sourceFile implementation="java.io.File">${basedir}/src/main/plan/plan.xml</sourceFile>
        <targetDir implementation="java.io.File">${project.build.directory}/work</targetDir>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <targetFile implementation="java.io.File">${project.build.directory}/work/plan.xml</targetFile>
        <filteredPlanFile implementation="java.io.File">${project.build.directory}/work/filteredplan.xml</filteredPlanFile>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>archive-car</goal>
      <description>Jar up a packaged plugin</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.ArchiveCarMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use.

See &lt;a href=&quot;http://maven.apache.org/ref/current/maven-archiver/apidocs/org/apache/maven/archiver/MavenArchiveConfiguration.html&quot;&gt;the Javadocs for MavenArchiveConfiguration&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>baseDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The module base directory.</description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>boot</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>whether this is a boot bundle (starts kernel, and the config) or a normal plugin bundle.</description>
        </parameter>
        <parameter>
          <name>classesDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the classes/resources.</description>
        </parameter>
        <parameter>
          <name>classpath</name>
          <type>org.apache.geronimo.mavenplugins.car.ClasspathElement[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>An array of {@link org.apache.geronimo.mavenplugins.car.ClasspathElement} objects which will be used to construct the
Class-Path entry of the manifest.

This is needed to allow per-element prefixes to be added, which the standard Maven archiver
does not provide.</description>
        </parameter>
        <parameter>
          <name>classpathPrefix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The default prefix to be applied to all elements of the &lt;tt&gt;classpath&lt;/tt&gt; which
do not provide a prefix.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>explicitResolutionProperties</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The location where the properties mapping will be generated.

&lt;p&gt;
Probably don&apos;t want to change this.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>finalName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Name of the generated archive.</description>
        </parameter>
        <parameter>
          <name>instructions</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional instructions that will get processed to adjust the manifest header. Currently,
only the Import-Package instruction is recognized.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>module</name>
          <type>org.apache.geronimo.mavenplugins.car.Dependency</type>
          <required>false</required>
          <editable>true</editable>
          <description>An {@link Dependency} to include as a module of the CAR. we need this here to determine
if the included module is a EBA application.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the generated archive.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>resourcesDir</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Location of resources directory for additional content to include in the car.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>targetRepository</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The Geronimo repository where modules will be packaged up from.</description>
        </parameter>
      </parameters>
      <configuration>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <resourcesDir implementation="java.io.File">${project.build.directory}/resources</resourcesDir>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <targetRepository implementation="java.io.File">${project.build.directory}/assembly/system</targetRepository>
        <outputDirectory implementation="java.io.File">${project.build.directory}</outputDirectory>
        <explicitResolutionProperties implementation="java.io.File">${project.build.directory}/explicit-versions.properties</explicitResolutionProperties>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <finalName implementation="java.lang.String">${project.build.finalName}</finalName>
        <baseDirectory implementation="java.io.File">${project.basedir}</baseDirectory>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <classesDirectory implementation="java.io.File">${project.build.outputDirectory}</classesDirectory>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.Archiver</role>
          <role-hint>jar</role-hint>
          <field-name>jarArchiver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.archiver.manager.ArchiverManager</role>
          <field-name>archiverManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>package</goal>
      <description>Build a Geronimo Configuration using the local Maven infrastructure.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.PackageMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>bootstrap</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>True to enable the bootshell when packaging.</description>
        </parameter>
        <parameter>
          <name>defaultDeploymentConfig</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>false</editable>
          <description>The default deployer module to be used when no other deployer modules are configured.</description>
        </parameter>
        <parameter>
          <name>deployerName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the deployer which will be used to deploy the CAR.</description>
        </parameter>
        <parameter>
          <name>deploymentConfigs</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Ther deployer modules to be used when packaging.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>explicitResolutionProperties</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The location where the properties mapping will be generated.
&lt;p/&gt;
&lt;p&gt;
Probably don&apos;t want to change this.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>module</name>
          <type>org.apache.geronimo.mavenplugins.car.Dependency</type>
          <required>false</required>
          <editable>true</editable>
          <description>An {@link Dependency} to include as a module of the CAR.</description>
        </parameter>
        <parameter>
          <name>moduleFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The file to include as a module of the CAR.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the generated archive.</description>
        </parameter>
        <parameter>
          <name>planFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The plan file for the CAR.</description>
        </parameter>
        <parameter>
          <name>pluginMetadataFileName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Name of generated plugin metadata file.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>repository</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The local Maven repository which will be used to pull artifacts into the Geronimo repository when packaging.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>targetDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory for generated plugin metadata file.</description>
        </parameter>
        <parameter>
          <name>targetRepository</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The Geronimo repository where modules will be packaged up from.</description>
        </parameter>
      </parameters>
      <configuration>
        <pluginMetadataFileName implementation="java.lang.String" default-value="META-INF/geronimo-plugin.xml"/>
        <targetDir implementation="java.io.File">${project.build.directory}/resources/</targetDir>
        <deployerName implementation="java.lang.String">org.apache.geronimo.framework/geronimo-gbean-deployer/${geronimoVersion}/car?j2eeType=Deployer,name=Deployer</deployerName>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <targetRepository implementation="java.io.File">${project.build.directory}/assembly/system</targetRepository>
        <outputDirectory implementation="java.io.File">${project.build.directory}</outputDirectory>
        <explicitResolutionProperties implementation="java.io.File">${project.build.directory}/explicit-versions.properties</explicitResolutionProperties>
        <defaultDeploymentConfig implementation="java.lang.String">org.apache.geronimo.framework/j2ee-system/${geronimoVersion}/car</defaultDeploymentConfig>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <planFile implementation="java.io.File">${project.build.directory}/work/plan.xml</planFile>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <repository implementation="java.io.File">${settings.localRepository}</repository>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>archive</goal>
      <description>Creates an archive containing a server assembly including all the dependencies in this projects pom.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.ArchiveMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>destDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The target directory of the project.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Files to exclude from the archive</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>tarAssemblies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>whether to create tar.gz archive</description>
        </parameter>
        <parameter>
          <name>targetFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The target file to set as the project&apos;s artifact.</description>
        </parameter>
        <parameter>
          <name>targetServerDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The location of the server repository.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <targetServerDirectory implementation="java.io.File">${project.build.directory}/assembly</targetServerDirectory>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <tarAssemblies implementation="boolean" default-value="true">${tarAssemblies}</tarAssemblies>
        <destDir implementation="java.io.File">${project.build.directory}</destDir>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <targetFile implementation="java.io.File">${project.file}</targetFile>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>update-pluginlist</goal>
      <description>Maintain the geronimo-plugins.xml catalog in the local maven repository by merging in the geronimo-plugin.xml from the current project.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.UpdatePluginListMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>targetFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Location of the (just generated) plugin metadata file to merge into the geronimo-plugins.xml catalog in the local maven repository.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <targetFile implementation="java.io.File">${project.build.directory}/resources/META-INF/geronimo-plugin.xml</targetFile>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>prepare-metadata</goal>
      <description>Generate a geronimo-plugin.xml file based on configuration in the pom and car-maven-plugin configuration.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.PluginMetadataGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>category</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Category of the geronimo plugin.</description>
        </parameter>
        <parameter>
          <name>commonInstance</name>
          <type>org.codehaus.plexus.configuration.PlexusConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>Shared configuration from parent that we merge since maven is incompetent at it. This is a plugin-artifactType element without moduleId or dependencies.
Do not attempt to include more than one of these in the parent poms since maven will not merge them correctly.</description>
        </parameter>
        <parameter>
          <name>dependencies</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Dependencies explicitly listed in the car-maven-plugin configuration</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>module</name>
          <type>org.apache.geronimo.mavenplugins.car.Dependency</type>
          <required>false</required>
          <editable>true</editable>
          <description>An {@link Dependency} to include as a module of the CAR. we need to exclude this
from the dependencies since we&apos;ve included its content in the car directly.</description>
        </parameter>
        <parameter>
          <name>obrFileName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Name of generated obr repository.xml file.</description>
        </parameter>
        <parameter>
          <name>osiApproved</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether licenses (copied from maven licence elements) are OSI approved.</description>
        </parameter>
        <parameter>
          <name>pluginGroup</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whether the geronimo plugin is a geronimo plugin group.</description>
        </parameter>
        <parameter>
          <name>pluginMetadataFileName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Name of generated plugin metadata file.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
        <parameter>
          <name>targetDir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory for generated plugin metadata file.</description>
        </parameter>
        <parameter>
          <name>targetRepository</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>The Geronimo repository where modules will be packaged up from.</description>
        </parameter>
        <parameter>
          <name>useMavenDependencies</name>
          <type>org.apache.geronimo.mavenplugins.car.UseMavenDependencies</type>
          <required>false</required>
          <editable>true</editable>
          <description>Configuration of use of maven dependencies. If missing or if value element is false, use the explicit list in the car-maven-plugin configuration.
If present and true, use the maven dependencies in the current pom file of scope null, runtime, or compile. In addition, the version of the maven
dependency can be included or not depending on the includeVersion element.</description>
        </parameter>
      </parameters>
      <configuration>
        <pluginMetadataFileName implementation="java.lang.String" default-value="META-INF/geronimo-plugin.xml"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <targetDir implementation="java.io.File">${project.build.directory}/resources/</targetDir>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <targetRepository implementation="java.io.File">${project.build.directory}/repository</targetRepository>
        <osiApproved implementation="boolean" default-value="false"/>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <obrFileName implementation="java.lang.String" default-value="OSGI-INF/obr/repository.xml"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>validate-configuration</goal>
      <description>Check that all dependencies mentioned explicitly in the car-maven-plugin configuration are present as maven dependencies.</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.geronimo.mavenplugins.car.ValidateConfigurationMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>artifactRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The basedir of the project.</description>
        </parameter>
        <parameter>
          <name>dependencies</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Dependencies explicitly listed in the car-maven-plugin configuration</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The character encoding scheme to be applied when filtering resources.</description>
        </parameter>
        <parameter>
          <name>escapeString</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Expression preceded with the String won&apos;t be interpolated
\${foo} will be replaced with ${foo}</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>The artifact repository to use.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>systemProperties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>System properties.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <session implementation="org.apache.maven.execution.MavenSession">${session}</session>
        <artifactRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</artifactRepository>
        <escapeString implementation="java.lang.String">${maven.resources.escapeString}</escapeString>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <basedir implementation="java.io.File">${basedir}</basedir>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>
          <field-name>artifactCollector</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenResourcesFiltering</role>
          <role-hint>default</role-hint>
          <field-name>mavenResourcesFiltering</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.filtering.MavenFileFilter</role>
          <field-name>mavenFileFilter</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.metadata.ArtifactMetadataSource</role>
          <field-name>artifactMetadataSource</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jaxb_2.2_spec</artifactId>
      <type>jar</type>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.bundles</groupId>
      <artifactId>jaxb-impl</artifactId>
      <type>jar</type>
      <version>2.2.3-1_1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.bundles</groupId>
      <artifactId>sxc-jaxb</artifactId>
      <type>jar</type>
      <version>0.7.3_1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-stax-api_1.2_spec</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.bundles</groupId>
      <artifactId>woodstox-core-asl</artifactId>
      <type>jar</type>
      <version>4.1.2_1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>stax2-api</artifactId>
      <type>jar</type>
      <version>3.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-activation_1.1_spec</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-jta_1.1_spec</artifactId>
      <type>jar</type>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-hook</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-common</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-kernel</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-osgi-registry</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-all</artifactId>
      <type>jar</type>
      <version>3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.cglib</artifactId>
      <type>jar</type>
      <version>2.1_3_4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xbean</groupId>
      <artifactId>xbean-finder</artifactId>
      <type>jar</type>
      <version>3.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xbean</groupId>
      <artifactId>xbean-bundleutils</artifactId>
      <type>jar</type>
      <version>3.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xbean</groupId>
      <artifactId>xbean-reflect</artifactId>
      <type>jar</type>
      <version>3.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-system</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-cli</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-crypto</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-pax-logging</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.configadmin</artifactId>
      <type>jar</type>
      <version>1.2.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-jexl</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.bundlerepository</artifactId>
      <type>jar</type>
      <version>1.6.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-obr</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-plugin</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.ant</artifactId>
      <type>jar</type>
      <version>1.7.0_3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-service-builder</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-deployment</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.xmlresolver</artifactId>
      <type>jar</type>
      <version>1.2_2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-javaee-deployment_1.1MR3_spec</artifactId>
      <type>jar</type>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-deploy-tool</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.shell</groupId>
      <artifactId>org.apache.karaf.shell.console</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.jaas</groupId>
      <artifactId>org.apache.karaf.jaas.modules</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.jaas</groupId>
      <artifactId>org.apache.karaf.jaas.config</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf</groupId>
      <artifactId>org.apache.karaf.util</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.gogo.runtime</artifactId>
      <type>jar</type>
      <version>0.6.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.aries.jmx</groupId>
      <artifactId>org.apache.aries.jmx</artifactId>
      <type>jar</type>
      <version>0.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.aries</groupId>
      <artifactId>org.apache.aries.util</artifactId>
      <type>jar</type>
      <version>0.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-transformer</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.framework</groupId>
      <artifactId>geronimo-main</artifactId>
      <type>jar</type>
      <version>3.0-beta-1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.yoko</groupId>
      <artifactId>yoko-spec-corba</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.yoko</groupId>
      <artifactId>yoko-rmi-spec</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>backport-util-concurrent</groupId>
      <artifactId>backport-util-concurrent</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-archiver</artifactId>
      <type>jar</type>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
      <type>jar</type>
      <version>1.0-alpha-7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-tree</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-filtering</artifactId>
      <type>jar</type>
      <version>1.0-beta-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-file</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-parameter-documenter</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-lightweight</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-shared</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>nekohtml</groupId>
      <artifactId>xercesMinimal</artifactId>
      <type>jar</type>
      <version>1.9.6.2</version>
    </dependency>
    <dependency>
      <groupId>nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <type>jar</type>
      <version>1.9.6.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-webdav-jackrabbit</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-webdav</artifactId>
      <type>jar</type>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-jcr-commons</artifactId>
      <type>jar</type>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
      <type>jar</type>
      <version>1.5.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <type>jar</type>
      <version>1.5.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-logging-api</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-error-diagnostics</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh-external</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh-common</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-descriptor</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interactivity-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <type>jar</type>
      <version>0.1.38</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-monitor</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>1.4.5</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.xstream</artifactId>
      <type>jar</type>
      <version>1.3_3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.xpp3</artifactId>
      <type>jar</type>
      <version>1.1.4c_3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.gossip</groupId>
      <artifactId>gossip</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
      <type>jar</type>
      <version>4.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <type>jar</type>
      <version>4.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.xmlbeans</artifactId>
      <type>jar</type>
      <version>2.4.0_3</version>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.logging</groupId>
      <artifactId>pax-logging-api</artifactId>
      <type>jar</type>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.jaas</groupId>
      <artifactId>org.apache.karaf.jaas.boot</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.url</groupId>
      <artifactId>pax-url-mvn</artifactId>
      <type>jar</type>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.tooling</groupId>
      <artifactId>karaf-maven-plugin</artifactId>
      <type>jar</type>
      <version>3.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <type>jar</type>
      <version>3.0.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.0.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>2.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>1.2-alpha-10</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>2.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.9.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.0-alpha-1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <type>jar</type>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>maven-bundle-plugin</artifactId>
      <type>jar</type>
      <version>2.3.5</version>
    </dependency>
    <dependency>
      <groupId>biz.aQute</groupId>
      <artifactId>bndlib</artifactId>
      <type>jar</type>
      <version>1.43.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.fileinstall</artifactId>
      <type>jar</type>
      <version>3.1.10</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>org.apache.karaf.features.core</artifactId>
      <type>jar</type>
      <version>3.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.ops4j.pax.url</groupId>
      <artifactId>pax-url-wrap</artifactId>
      <type>jar</type>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.deployer</groupId>
      <artifactId>org.apache.karaf.deployer.spring</artifactId>
      <type>jar</type>
      <version>3.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.deployer</groupId>
      <artifactId>org.apache.karaf.deployer.blueprint</artifactId>
      <type>jar</type>
      <version>3.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.deployer</groupId>
      <artifactId>org.apache.karaf.deployer.features</artifactId>
      <type>jar</type>
      <version>3.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.deployer</groupId>
      <artifactId>org.apache.karaf.deployer.kar</artifactId>
      <type>jar</type>
      <version>3.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xbean</groupId>
      <artifactId>xbean-finder-shaded</artifactId>
      <type>jar</type>
      <version>3.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xbean</groupId>
      <artifactId>xbean-asm-shaded</artifactId>
      <type>jar</type>
      <version>3.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.framework</artifactId>
      <type>jar</type>
      <version>3.0.2</version>
    </dependency>
  </dependencies>
</plugin>