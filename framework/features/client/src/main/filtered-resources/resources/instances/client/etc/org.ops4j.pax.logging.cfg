################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

# Root logger
log4j.rootLogger=INFO, out, osgi:*
log4j.throwableRenderer=org.apache.log4j.OsgiThrowableRenderer

# CONSOLE appender not used by default
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %-32.32C %4L | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n

# File appender
log4j.appender.out=org.apache.log4j.RollingFileAppender
log4j.appender.out.layout=org.apache.log4j.PatternLayout
log4j.appender.out.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %-32.32C %4L | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.out.file=${karaf.data}/log/karaf.log
log4j.appender.out.append=true
log4j.appender.out.maxFileSize=10MB
log4j.appender.out.maxBackupIndex=3

# Sift appender
log4j.appender.sift=org.apache.log4j.sift.MDCSiftingAppender
log4j.appender.sift.key=bundle.name
log4j.appender.sift.default=karaf
log4j.appender.sift.appender=org.apache.log4j.FileAppender
log4j.appender.sift.appender.layout=org.apache.log4j.PatternLayout
log4j.appender.sift.appender.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %-32.32C %4L | %m%n
log4j.appender.sift.appender.file=${karaf.data}/log/$\\{bundle.name\\}.log
log4j.appender.sift.appender.append=true


#
# Example: enable trace logging from CONSOLE appender
#
#log4j.appender.CONSOLE.Threshold=TRACE

#
# Example: enable trace messages from foo.bar category
#
#log4j.logger.foo.bar=TRACE

# Geronimo
#This will help find connection leak problems
#log4j.logger.org.apache.geronimo.connector.outbound=TRACE
log4j.logger.org.apache.geronimo.system.logging.log4j.Log4jService=INFO


log4j.logger.org.apache.geronimo.system.properties.SystemProperties=ERROR

#### Eliminate any INFO level output during normal operation -- except the really relevant stuff ####
#    We can change the Geronimo code to avoid this, but we have to just adjust the log levels for
#    any third-party libraries.
log4j.logger.org.apache.commons.digester=ERROR
log4j.logger.org.apache.jasper.compiler.SmapUtil=WARN

# ActiveMQ
log4j.logger.org.apache.activemq=WARN
log4j.logger.org.apache.activemq.broker.jmx.ManagementContext=ERROR

# Don't need so much info on every web page that's rendered
log4j.logger.org.mortbay=INFO
log4j.logger.org.apache.pluto=INFO
log4j.logger.org.apache.pluto.container.util.StringManager=ERROR
log4j.logger.org.apache.jasper=INFO

# Various Jetty startup/shutdown output
log4j.logger.org.mortbay.http.HttpServer=WARN
log4j.logger.org.mortbay.http.SocketListener=WARN
log4j.logger.org.mortbay.http.ajp.AJP13Listener=WARN
log4j.logger.org.mortbay.util.Container=WARN
log4j.logger.org.mortbay.util.Credential=WARN
log4j.logger.org.mortbay.util.ThreadedServer=WARN
log4j.logger.org.mortbay.jetty.servlet.WebApplicationContext=WARN
log4j.logger.org.mortbay.jetty.context=WARN

# Various Tomcat startup output
log4j.logger.org.apache.catalina.realm.JAASRealm=WARN
log4j.logger.org.apache.catalina.realm.RealmBase=WARN
log4j.logger.org.apache.catalina.loader.WebappLoader=WARN
log4j.logger.org.apache.catalina.startup.Embedded=WARN
log4j.logger.org.apache.catalina.core.StandardEngine=WARN
log4j.logger.org.apache.catalina.core.StandardHost=WARN
log4j.logger.org.apache.jk.common.ChannelSocket=WARN
log4j.logger.org.apache.jk.server.JkMain=WARN
log4j.logger.org.apache.coyote.http11.Http11BaseProtocol=WARN
log4j.logger.org.apache.coyote.http11.Http11Protocol=WARN
log4j.logger.org.apache.catalina.core.ContainerBase=WARN
log4j.logger.org.apache.catalina.core.StandardContext=WARN
log4j.logger.org.apache.tomcat.util.net.SSLImplementation=WARN
log4j.logger.org.apache.catalina.startup.DigesterFactory=ERROR

# myfaces startup output
log4j.logger.org.apache.myfaces.renderkit.html.HtmlRenderKitImpl=WARN
log4j.logger.org.apache.myfaces.config.FacesConfigurator=WARN
log4j.logger.org.apache.myfaces.webapp.StartupServletContextListener=WARN

# emits a spurious warn about null locale during startup of webapps
log4j.logger.org.apache.myfaces.shared_impl.util.LocaleUtils=ERROR

# Emits a spurious WARN during startup on /some-path/* security mappings
log4j.logger.org.apache.catalina.deploy.SecurityCollection=ERROR

# Prints the MBean Server ID
log4j.logger.javax.management.MBeanServerFactory=WARN

# Prints the RMI connection URL
log4j.logger.javax.management.remote.rmi.RMIConnectorServer=WARN
log4j.logger.javax.management.remote.JMXServiceURL=WARN

# Prints various stuff during startup
log4j.logger.org.apache.juddi.registry.RegistryServlet=WARN

# Prints various stuff when the portal is used
log4j.logger.org.apache.pluto.portalImpl.Servlet=WARN

# The users don't care the portlet register/unregister info in log.
log4j.logger.org.apache.pluto.driver.container.PortletContextManager=WARN

# Prints stuff for AJAX calls
log4j.logger.uk.ltd.getahead.dwr.impl.DefaultConfiguration=WARN
log4j.logger.uk.ltd.getahead.dwr.impl.ExecuteQuery=WARN
log4j.logger.uk.ltd.getahead.dwr.util.Logger=WARN
log4j.logger.org.directwebremoting.impl.DTDEntityResolver=ERROR

# Aries Blueprint - hide "waiting for namespace handler" warnings
log4j.logger.org.apache.aries.blueprint.container.BlueprintContainerImpl=ERROR

# XBean - Suppress "could not load" warnings for Spring classes
log4j.logger.org.apache.xbean.blueprint.context.impl.XBeanNamespaceHandler=ERROR

# Aries Blueprint - hide "ServiceUnavailableException: The Blueprint container is being or has been destroyed" INFO message in log when shutdown geronimo.
log4j.logger.org.apache.aries.blueprint.container.BeanRecipe=WARN

# Example: enable Axis debug log output
#log4j.logger.org.apache.axis.enterprise=DEBUG
#log4j.logger.org.apache.axis.TIME=DEBUG
#log4j.logger.org.apache.axis.EXCEPTIONS=DEBUG

# Example: enable Axis2 debug log output
#log4j.logger.org.apache.axis2.enterprise=DEBUG
#log4j.logger.de.hunsicker.jalopy.io=DEBUG
#log4j.logger.httpclient.wire.header=DEBUG
#log4j.logger.org.apache.commons.httpclient=DEBUG

# Example: enable OpenJPA debug log output
#log4j.logger.openjpa.Runtime=TRACE
#log4j.logger.openjpa.Enhance=TRACE
#log4j.logger.openjpa.SQL=TRACE
#log4j.logger.openjpa=TRACE

