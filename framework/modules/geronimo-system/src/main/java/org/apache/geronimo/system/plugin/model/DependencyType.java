//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.04.08 at 04:38:27 PM PDT 
//


package org.apache.geronimo.system.plugin.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.apache.geronimo.kernel.repository.Dependency;


/**
 * 
 *                 See pluginType/dependency above
 *             
 * 
 * <p>Java class for dependencyType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="dependencyType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://geronimo.apache.org/xml/ns/plugins-1.3}artifactType">
 *       &lt;sequence>
 *         &lt;element name="import" type="{http://geronimo.apache.org/xml/ns/plugins-1.3}importType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="start" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "dependencyType", propOrder = {
    "_import"})
public class DependencyType
    extends ArtifactType
    implements Serializable
{

    private final static long serialVersionUID = 12343L;
    @XmlElement(name = "import")
    protected ImportType _import;
    @XmlAttribute
    protected Boolean start;

    /**
     * Gets the value of the import property.
     * 
     * @return
     *     possible object is
     *     {@link ImportType }
     *     
     */
    public ImportType getImport() {
        return _import;
    }

    /**
     * Sets the value of the import property.
     * 
     * @param value
     *     allowed object is
     *     {@link ImportType }
     *     
     */
    public void setImport(ImportType value) {
        this._import = value;
    }

    /**
     * Gets the value of the start property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStart() {
        if (start == null) {
            return true;
        } else {
            return start;
        }
    }

    /**
     * Sets the value of the start property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setStart(Boolean value) {
        this.start = value;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        if (!super.equals(o)) return false;

        DependencyType that = (DependencyType) o;

        if (_import != that._import) return false;
        if (start != null ? !start.equals(that.start) : that.start != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        int result = super.hashCode();
        result = 31 * result + (_import != null ? _import.hashCode() : 0);
        result = 31 * result + (start != null ? start.hashCode() : 0);
        return result;
    }

    @Override
    public String toString() {
        return "DependencyType [" + getGroupId() + "/" + getArtifactId() + "/" +  getVersion() + "/" + getType() + ":" + getImport() + "]";
    }

    public static DependencyType newDependencyType(Dependency dependency) {
        DependencyType dependencyType = new DependencyType();
        dependencyType.setGroupId(dependency.getArtifact().getGroupId());
        dependencyType.setArtifactId(dependency.getArtifact().getArtifactId());
        if (dependency.getArtifact().getVersion() != null) {
            dependencyType.setVersion(dependency.getArtifact().getVersion().toString());
        }
        dependencyType.setType(dependency.getArtifact().getType());
        dependencyType.setImport(ImportType.fromValue(dependency.getImportType().getName()));
        return dependencyType;
    }
}
