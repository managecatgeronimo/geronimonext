#=====================================================================
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#=====================================================================

plancreator.archive.archive                   = 归档文件
plancreator.archive.archiveErr                = 您提供的归档文件不是一个WAR包. 请注意当前只支持WAR类型.
plancreator.archive.config                    = 配置
plancreator.common.action                     = 操作
plancreator.common.add                        = 添加
plancreator.common.cancel                     = 取消
plancreator.common.class                      = 类
plancreator.common.del                        = 删除
plancreator.common.edit                       = 编辑
plancreator.common.finish                     = 完成
plancreator.common.host                       = 主机
plancreator.common.id                         = Id
plancreator.common.name                       = 名称
plancreator.common.next                       = 下一步
plancreator.common.port                       = 端口
plancreator.common.portName                   = 端口名称
plancreator.common.previous                   = 前一个
plancreator.common.protocol                   = 协议
plancreator.common.type                       = 类型
plancreator.common.uri                        = URI
plancreator.common.url                        = URL
plancreator.dependency.dependency             = 依赖项
plancreator.dependency.desc                   = 下面列出了服务器库中所有可用的模块.默认的选项适用于大多数情况。
plancreator.dependency.title                  = <b>WAR - 依赖项</b> -- 选择您的网络应用程序依赖的其他模块
plancreator.dependency.tree                   = 以树状结构显示依赖关系
plancreator.deploy.deploy                     = 部署 WAR
plancreator.deploy.desc                       = 生成的Geronimo 部署计划如下面的编辑框中所示. 如果你想做一些改动(默认设置已适用于大多数场景), 可以进行编辑并点击 "部署 WAR"来部署网络应用程序.
plancreator.deploy.plan                       = 部署计划
plancreator.deploy.title                      = <b>创建的部署计划</b> -- 拷贝或编辑部署计划
plancreator.env.artifactId                    = Artifact Id
plancreator.env.artifactIdDesc                = 标识组中指定模块的名称
plancreator.env.checked                       = CHECKED
plancreator.env.classpathSetting              = 类路径设置
plancreator.env.context                       = 网络应用上下文路径
plancreator.env.contextDisc                   = 这是客户端用于访问网络应用的URL第一部分。例如, 如果上下文路径输入为 'HelloWorld', 那么访问该应用的典型URL以"http://host:port/HelloWorld/"开头.
plancreator.env.desc                          = 该页面上的默认设置已经适用于典型的场景
plancreator.env.groupId                       = Group Id
plancreator.env.groupIdDesc                   = 标识相关模块所属组的名称. 它可以是项目名称, 公司名称等.请注意每一个artifactID在组中必须唯一.
plancreator.env.hiddenClasses                 = Hidden Classes
plancreator.env.hiddenClassesDesc             = 列出可由父类载入模式载入，但Web应用不能通过父类载入模式访问的包或者类. 该设置用于网路应用程序希望自行提供有别于其Parent (或者是Geronimo本身)使用的库文件. 使用';'分隔多个包或者类.
plancreator.env.id                            = 网络应用程序标识
plancreator.env.idDesc                        = Geronimo中每一个模块都通过由groupId/artifactId/version/type四项构成的ModuleID唯一标识. 例如: "org.apache.geronimo.plugins/plancreator-tomcat/2.1/car".
plancreator.env.inverseClassLoading           = 反转类加载
plancreator.env.inverseClassLoadingDesc       = 一般情况下(该选项没有选择), 模块的类加载采用正常的加载模式 - 会先尝试使用父类加载模式载入, 然后是本身. 如果该选项被选择, 次序则相反。. 当前类的载入模式会优先于父类加载模式被采用. 这样通常是为了使WEB-INF/lib中的JAR优先载入使用.
plancreator.env.nonOverridableClass           = 不可覆盖的类
plancreator.env.nonOverridableClassDesc       = 列出必须用其父类载入模式载入而不是从WEB-INF/lib或WEB-INF/classes中载入的Web应用。可应用于强制Web应用程序与其他应用共享相同的库, 即使在各自的WAR中已包含库.
plancreator.env.title                         = <b>WAR - 环境</b> -- 设置Web应用程序标识和类路径
plancreator.env.type                          = 类型
plancreator.env.typeDesc                      = 一个模块的类型一般是CAR(系统模块)或者是应用的扩展(比如ear, war和jar)
plancreator.env.version                       = 版本
plancreator.env.versionDesc                   = 该模块的版本号
plancreator.reference.desc                    = 映射Web应用程序中声明的引用到服务器环境中可用的项目. 在Web应用程序中声明的引用 (比如 EJB, EJB Local, JDBC连接池, JavaMail会话, JMS连接工厂和JMS目标引用) 显示在下面左侧, 在服务器环境中可被这些引用关联的资源显示在右侧.
plancreator.reference.editor                  = 在此编辑引用
plancreator.reference.ejbDeployed             = 已部署EJB
plancreator.reference.ejbLocalRef             = EJB本地引用
plancreator.reference.ejbLocalReference       = EJB本地引用
plancreator.reference.ejbRef                  = EJB引用
plancreator.reference.ejbReference            = EJB引用
plancreator.reference.javamail                = 可用的Mail会话
plancreator.reference.javamailRef             = Mail Session Ref
plancreator.reference.javamailReference       = JavaMail会话引用
plancreator.reference.jdbc                    = JDBC池
plancreator.reference.jdbcRef                 = JDBC引用
plancreator.reference.jdbcReference           = JDBC 连接池引用
plancreator.reference.jms                     = JMS目标
plancreator.reference.jmsConn                 = JMS 工厂
plancreator.reference.jmsConnRef              = JMS引用
plancreator.reference.jmsConnReference        = JMS 连接工厂引用
plancreator.reference.jmsRef                  = JMS引用
plancreator.reference.jmsReference            = JMS目标引用
plancreator.reference.resolveErr              = 部分引用未能被解析, 请手动解析后点击下一步按钮
plancreator.reference.title                   = <b>WAR - 引用</b> -- 解析 EJB, 本地EJB, JDBC连接池, JavaMail会话, JMS连接工厂,JMS目标和Web Service引用
plancreator.reference.tree                    = EAR 树结构在此显示
plancreator.reference.wsDesc                  = 在应用程序中声明的服务引用在如下左侧显示. 如果 WSDL 中不包含访问此服务通过的端口信息或相关信息不明确, 那么通过点击"添加端口"来解析 service-ref.
plancreator.reference.wsRef                   = 服务引用名称
plancreator.reference.wsReference             = Web Service引用
plancreator.security.advancedSetting          = 高级设置
plancreator.security.advancedSettingDesc      = 点击高级设置来启用指定 run-as-subject
plancreator.security.credenitial              = 证书
plancreator.security.credenitialName          = 证书名称
plancreator.security.credentialStore          = 证书库
plancreator.security.credentialStoreSelection = 请选择定义了 defaultSubject 和 runAsSubjects 的证书库
plancreator.security.desc                     = 将web.xml描述文件中声明的安全角色映射到安全域中指定的用户或组.同样也可以给未登录用户指定一个默认的用户和组.
plancreator.security.distinguishedName        = 唯一的名称
plancreator.security.doAsCurrentCaller        = 作为当前调用者来执行
plancreator.security.doAsCurrentCallerDesc    = 如果调用的subject或用户是该应用，而不是服务器，请选择此项。
plancreator.security.domainName               = 域名
plancreator.security.domainNameErr            = 请为该角色输入一个域名
plancreator.security.groupPrincipal           = 组 Principal
plancreator.security.loginDomainPrincipal     = 登录域Principal
plancreator.security.principal                = Principal
plancreator.security.realm                    = Realm
plancreator.security.realmName                = Realm 名称
plancreator.security.realmPrincipal           = Realm Principal
plancreator.security.role                     = 角色
plancreator.security.roleMapping              = 安全角色映射
plancreator.security.roleMappingDesc          = 在web.xml中定义的安全角色在下面左侧显示. 通过添加 Principals, 登录域 Principals, Realm Principals 或者相区别的名称将它们映射到在Geronimo的安全 realms 中现有的Principals上.
plancreator.security.roleMappingErr           = 请为该角色输入一个唯一的Pricipal名称
plancreator.security.roleTree                 = 安全角色的树结构
plancreator.security.runAsSubjectDesc         = 当模块因角色限制, 但需要由指定的subject来继续运行时, 需要run-as-subject.
plancreator.security.runAsSubjectsTree        = Run-as-subjects 树
plancreator.security.securityRealmName        = 安全域的名称
plancreator.security.securityRealmNameDesc    = 选择用户登录认证时所使用的安全域.
plancreator.security.specifyRunAsSubject      = 指定 run-as-subject
plancreator.security.subject                  = Default Subject
plancreator.security.subjectDesc              = Default Subject在未认证用户访问非保护页面时使用. 通常情况下，它用于使一个不受保护的页面能访问受保护的资源 Realm是default Subject的默认 Realm 名称, Id为default Subject在该域中的名称.
plancreator.security.title                    = <b>WAR - 安全</b> -- 指定安全域和角色映射
plancreator.security.useContextHandler        = 使用上下文handler
plancreator.security.useContextHandlerDesc    = 如果安装的JACC策略上下文需要使用PolicyContextHandlers, 请选择该项
plancreator.security.userPrincipal            = User Principal
plancreator.status.detail                     = 显示详细情况
plancreator.status.launch                     = 载入Web应用
