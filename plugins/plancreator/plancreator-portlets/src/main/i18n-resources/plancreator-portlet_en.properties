#=====================================================================
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#=====================================================================

plancreator.archive.archive                   = Archive
plancreator.archive.archiveErr                = The archive you provided is not a WAR. Only WARs are supported as of now.
plancreator.archive.config                    = Configure
plancreator.common.action                     = Action
plancreator.common.add                        = Add
plancreator.common.cancel                     = Cancel
plancreator.common.class                      = Class
plancreator.common.del                        = Delete
plancreator.common.edit                       = Edit
plancreator.common.finish                     = Finish
plancreator.common.host                       = Host
plancreator.common.id                         = Id
plancreator.common.name                       = Name
plancreator.common.next                       = Next
plancreator.common.port                       = Port
plancreator.common.portName                   = PortName
plancreator.common.previous                   = Previous
plancreator.common.protocol                   = Protocol
plancreator.common.type                       = Type
plancreator.common.uri                        = URI
plancreator.common.url                        = URL
plancreator.dependency.dependency             = Dependencies
plancreator.dependency.desc                   = All the modules available in the server repository are shown below. Select the ones on which your web-application is dependent. Default selections should be sufficient in most scenarios.
plancreator.dependency.title                  = <b>WAR - Dependencies</b> -- Select the dependencies your Web Application has on other Modules
plancreator.dependency.tree                   = Dependencies tree goes here
plancreator.deploy.deploy                     = Deploy WAR
plancreator.deploy.desc                       = The generated Geronimo Deployment Plan is shown below in an edit box. If you would like to make any changes (default should be enough in most scenarios), do it now and then press "Deploy WAR" to deploy the Web application.
plancreator.deploy.plan                       = Deployment Plan
plancreator.deploy.title                      = <b>Created Plan</b> -- Copy/Edit Deployment Plan
plancreator.env.artifactId                    = Artifact Id
plancreator.env.artifactIdDesc                = A name identifying the specific module within the group.
plancreator.env.checked                       = CHECKED
plancreator.env.classpathSetting              = Classpath Settings
plancreator.env.context                       = Web Context Root
plancreator.env.contextDisc                   = This is the first part of the URL used to access the Web application by the client. For example, if the context-root is entered as "HelloWorld",  a typical URL to the application would  start with "http://host:port/HelloWorld/".
plancreator.env.desc                          = Defaults in this page should suffice for typical scenarios.
plancreator.env.groupId                       = Group ID
plancreator.env.groupIdDesc                   = A name identifying a group of related modules. This might be a project name, a company name, etc. The important thing is that each artifactID must be unique within the group.
plancreator.env.hiddenClasses                 = Hidden Classes
plancreator.env.hiddenClassesDesc             = List packages or classes that might be in a parent class loader, but should not be exposed from there to the Web application. This is typically used when the Web application wants to use a different version of a library than that of its parent configuration (or Geronimo itself) uses. Separate multiple package/class names with a semicolon ';'
plancreator.env.id                            = Web Application Identity
plancreator.env.idDesc                        = Every module in Geronimo is uniquely identified by its ModuleID which consists of four components: groupId, artifactId, version, and type. Example: "org.apache.geronimo.plugins/plancreator-tomcat/2.1/car".
plancreator.env.inverseClassLoading           = Inverse Class Loading
plancreator.env.inverseClassLoadingDesc       = Normally (if this element is not checked), the module's class loader will work normally - classes will be loaded from the parent class loader if available before checking the current class loader. If this element is checked, that behavior is reversed and the current class loader will always be checked first before looking in the parent class loader. This is often enabled to give the JARs in WEB-INF/lib precedence over anything that might be in a parent class loader.
plancreator.env.nonOverridableClass           = Non Overridable Classes
plancreator.env.nonOverridableClassDesc       = List packages or classes that the Web application should always load from a parent class loader, and never load from WEB-INF/lib or WEB-INF/classes. This might be used to force a Web application to share the same instance of a common library with other Web applications, even if they each include it in their own WAR. Separate multiple package/class names with a semicolon ';'
plancreator.env.title                         = <b>WAR - Environment</b> -- Configure Web Application Identity and Class Path
plancreator.env.type                          = Type
plancreator.env.typeDesc                      = A module's type is normally either CAR (for a system module) or the file extension for an application module (ear,war,jar,and so on).
plancreator.env.version                       = Version
plancreator.env.versionDesc                   = Version number for the module.
plancreator.reference.desc                    = Map the references declared in your Web application to specific items available in the server environment. References declared in your web-app (ex. EJB, EJB Local, JDBC Connection Pool, JavaMail Session, JMS Connection Factory and JMS Destination references) are shown below to the left and the resources (available in the server environment) to which they can be linked are shown to the right.
plancreator.reference.editor                  = Editors for references go here
plancreator.reference.ejbDeployed             = EJBs Deployed
plancreator.reference.ejbLocalRef             = EJB Local Ref
plancreator.reference.ejbLocalReference       = EJB Local References
plancreator.reference.ejbRef                  = EJB Ref
plancreator.reference.ejbReference            = EJB References
plancreator.reference.javamail                = Mail Sessions Available
plancreator.reference.javamailRef             = Mail Session Ref
plancreator.reference.javamailReference       = JavaMail Session References
plancreator.reference.jdbc                    = JDBC Pools
plancreator.reference.jdbcRef                 = JDBC Ref
plancreator.reference.jdbcReference           = JDBC Pool References
plancreator.reference.jms                     = JMS Destinations
plancreator.reference.jmsConn                 = JMS Factories
plancreator.reference.jmsConnRef              = JMS Ref
plancreator.reference.jmsConnReference        = JMS Connection Factory References
plancreator.reference.jmsRef                  = JMS Ref
plancreator.reference.jmsReference            = JMS Destination References
plancreator.reference.resolveErr              = Some of the references are not resolved. Resolve them and only then press Next button.
plancreator.reference.title                   = <b>WAR - References</b> -- Resolve EJB, EJB Local, JDBC Connection Pool, JavaMail Session, JMS Connection Factory, JMS Destination and Web Service References
plancreator.reference.tree                    = EAR tree goes here
plancreator.reference.wsDesc                  = Service references declared in your application are shown below to the left. If the WSDL doesn't contain the port information to contact the service or if that information is ambiguous, resolve the service-ref  by clicking on "Add Port".
plancreator.reference.wsRef                   = Service Ref Name
plancreator.reference.wsReference             = Web Service References
plancreator.security.advancedSetting          = Advanced Settings
plancreator.security.advancedSettingDesc      = Click Advanced Settings to enable specifying run-as-subject
plancreator.security.credenitial              = Credentials
plancreator.security.credenitialName          = Credentials Name
plancreator.security.credentialStore          = Credential Store
plancreator.security.credentialStoreSelection = Select the Credential Store which has the defaultSubject and runAsSubjects defined.
plancreator.security.desc                     = Map security roles declared in web.xml deployment descriptor to specific users or groups in the security realms configured in Geronimo. You can also specify a default user or group to be used when the end user has not yet logged in.
plancreator.security.distinguishedName        = Distinguished Name
plancreator.security.doAsCurrentCaller        = Do as current caller
plancreator.security.doAsCurrentCallerDesc    = Select this if the work is to be performed as the calling Subject/User instead of as Server.
plancreator.security.domainName               = Domain Name
plancreator.security.domainNameErr            = Please enter a domain name for this role
plancreator.security.groupPrincipal           = Group Principal
plancreator.security.loginDomainPrincipal     = Login Domain Principal
plancreator.security.principal                = Principal
plancreator.security.realm                    = Realm
plancreator.security.realmName                = Realm-name
plancreator.security.realmPrincipal           = Realm Principal
plancreator.security.role                     = Role
plancreator.security.roleMapping              = Security Role Mappings
plancreator.security.roleMappingDesc          = Security roles declared in web.xml are shown below to the left. Map them to specific principals present in Geronimo's security realms by adding Principals, Login Domain Principals, Realm Principals and/or Distinguished Names.
plancreator.security.roleMappingErr           = Enter a unique principal name for this role
plancreator.security.roleTree                 = Security roles tree
plancreator.security.runAsSubjectDesc         = The run-as-subject is required when the module that is constrained to the specified role continues to be run by the specified subject.
plancreator.security.runAsSubjectsTree        = Run-as-subjects tree
plancreator.security.securityRealmName        = Security Realm Name
plancreator.security.securityRealmNameDesc    = Select the Geronimo security realm that will authenticate user logins.
plancreator.security.specifyRunAsSubject      = Specify run-as-subject
plancreator.security.subject                  = Default Subject
plancreator.security.subjectDesc              = The defaultSubject is used whenever an unauthenticated user accesses an unsecured page. Typically, this is used so that an unsecured page can access a secured resource, a secured EJB for example. Realm is the realm name of the default subject and Id is the default subject's name within that realm.
plancreator.security.title                    = <b>WAR - Security</b> -- Specify Security Realm and Role Mappings
plancreator.security.useContextHandler        = Use context handler
plancreator.security.useContextHandlerDesc    = Select this if the installed JACC policy contexts should use PolicyContextHandlers.
plancreator.security.userPrincipal            = User Principal
plancreator.status.detail                     = Show full details
plancreator.status.launch                     = Launch Web App
