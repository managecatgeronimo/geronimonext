#Generated by ResourceBundle Editor (http://eclipse-rbe.sourceforge.net)
#=====================================================================
#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#=====================================================================

dbwizard.basicParams.database                                      = 数据库
dbwizard.basicParams.driverConnectionProperties                    = 驱动程序连接属性
dbwizard.basicParams.host                                          = 主机
dbwizard.basicParams.port                                          = 端口
dbwizard.basicParams.propertyExp                                   = 用来连接 {0} 的属性。该属性值可选（请参考 JDBC  驱动的文档）
dbwizard.basicParams.seeDocumentation                              = 请参考 JDBC  驱动的文档
dbwizard.basicParams.title                                         = <b>创建数据库连接池</b> -- 步骤2: 选择驱动程序，JAR，参数
dbwizard.basicParams.typicalJDBCURL                                = 典型的 JDBC URL
dbwizard.basicParams.unableToLoadDriver                            = 不能从选中的 JAR 包中加载驱动!
dbwizard.common.DBPassword                                         = 数据库密码
dbwizard.common.DBPasswordExp                                      = 用于连接数据库的密码
dbwizard.common.DBUserName                                         = 数据库用户名
dbwizard.common.DBUserNameExp                                      = 用于连接数据库的用户名
dbwizard.common.JDBCConnectURL                                     = JDBC 连接 URL
dbwizard.common.JDBCDriverClass                                    = JDBC 驱动类
dbwizard.common.URLFits                                            = 确保生成的 URL 符合你的 JDBC 驱动的语法。
dbwizard.common.actions                                            = 操作
dbwizard.common.blockingTimeout                                    = 阻塞超时
dbwizard.common.cancel                                             = 取消
dbwizard.common.configFile                                         = 配置文件
dbwizard.common.confirmAndDeploy                                   = 确认并部署
dbwizard.common.confirmPassword                                    = 确认密码
dbwizard.common.connectionPoolParameters                           = 连接池参数
dbwizard.common.delete                                             = 删除
dbwizard.common.deploy                                             = 部署
dbwizard.common.downloadDriver                                     = 下载驱动
dbwizard.common.driverJAR                                          = 驱动 JAR
dbwizard.common.driverJARExplanation                               = 连接到数据库时所需要的 JAR 包。使用 CTRL 或者 SHIFT 键选择多个 JAR 包。<br>这些 JAR 包应该已被安装在 GERONIMO/repository/ 目录下，（或者
dbwizard.common.driverTransactionTypes                             = 该连接池支持的事务类型
dbwizard.common.edit                                               = 编辑
dbwizard.common.editSettings                                       = 编辑设置
dbwizard.common.emptyText                                          = 焦点所在字段不能为空。
dbwizard.common.finish                                             = 完成
dbwizard.common.idleTimeout                                        = 空闲时间
dbwizard.common.import                                             = 从{0}导入
dbwizard.common.importFromJBoss                                    = 从 JBoss 4导入
dbwizard.common.importFromWebLogic                                 = 从 WebLogic 8.1导入
dbwizard.common.inMilliseconds                                     = 毫秒
dbwizard.common.inMinutes                                          = 分钟
dbwizard.common.maxNoOfCon                                         = 连接池中最小连接数目。默认值是 10。
dbwizard.common.name                                               = 名字
dbwizard.common.next                                               = 下一步
dbwizard.common.passwordMismatch                                   = 密码不匹配。
dbwizard.common.poolMaxSize                                        = 连接数最大值
dbwizard.common.poolMinSize                                        = 连接数最小值
dbwizard.common.returnToList                                       = 返回列表
dbwizard.common.save                                               = 保存
dbwizard.common.showPlan                                           = 显示部署计划
dbwizard.common.skipRemainingPools                                 = 跳过剩余池
dbwizard.common.skipTestAndDeploy                                  = 跳过测试而直接部署
dbwizard.common.skipTestAndShowPlan                                = 跳过测试而显示部署计划
dbwizard.common.state                                              = 状态
dbwizard.common.testConnection                                     = 测试连接
dbwizard.common.transactionType                                    = 事务类型
dbwizard.common.usingPoolWizard                                    = 使用 Geronimo 数据库连接池向导
dbwizard.confirmURL.blockingTimeoutExp                             = 每次调用所需等待的最长时间。留空表示使用默认值。
dbwizard.confirmURL.driverStatus                                   = 驱动状态
dbwizard.confirmURL.idleTimeoutExp                                 = 连接在关闭之前能有多长空闲时间。留空表示使用默认值。
dbwizard.confirmURL.loadedSuccessfully                             = 成功加载驱动
dbwizard.confirmURL.maxNoOfCon                                     = 连接池中最大连接数。留空表示使用默认值。
dbwizard.confirmURL.minimumNoOfCon                                 = 连接池中最小连接数。留空表示使用默认值。
dbwizard.confirmURL.title                                          = <b>创建数据库连接池</b> -- 步骤 3: 连接池最后配置
dbwizard.downloadStatus.summary                                    = 这个页面用于监测驱动程序下载过程。
dbwizard.downloadStatus.title                                      = <b>创建数据库连接池</b> -- 下载驱动
dbwizard.edit.basicConProperties                                   = 连接基本属性
dbwizard.edit.blockingTimeoutExp                                   = 每次调用所需等待的最长时间。默认为 5000。
dbwizard.edit.errorMsg01                                           = 池的最小值必须是一个数字，默认值是 0.
dbwizard.edit.errorMsg02                                           = 池的最小值不能是负数，默认值是 0.
dbwizard.edit.errorMsg03                                           = 池的最大值必须是一个数字，默认值是 10.
dbwizard.edit.errorMsg04                                           = 池的最大值必须大于 0，默认值是 10。
dbwizard.edit.errorMsg05                                           = 池的最大值必须大于最小值。
dbwizard.edit.idleTimeoutExp                                       = 连接在关闭之前能有多长空闲时间。默认为 15。
dbwizard.edit.maxNoOfCon                                           = 连接池中最大连接数目。默认为 10.
dbwizard.edit.minimumNoOfCon                                       = 连接池中最小连接数目。默认为 0。
dbwizard.edit.poolName                                             = 连接池名称
dbwizard.edit.poolNameExp                                          = 一个不同于服务器中其它数据库连接池的名称（名称中请不要有空格）。
dbwizard.edit.poolType                                             = 连接池类型
dbwizard.edit.seeDocumentation                                     = 请参考 JDBC 驱动的文档
dbwizard.edit.seeLog                                               = 查看日志文件了解详情
dbwizard.edit.summary                                              = 这个页面用于编辑已存在的数据库连接池。
dbwizard.edit.unableToLoadDriver                                   = 不能从选中的 JAR 包中加载驱动!
dbwizard.importStatus.currentPools                                 = 服务器中现有的连接池
dbwizard.importStatus.importFailed                                 = 导入连接池失败，或者没有发现任何可用的数据库连接池！
dbwizard.importStatus.importMessages                               = 导入过程中的消息
dbwizard.importStatus.importStatus                                 = 导入状态
dbwizard.importStatus.originalJNDI                                 = 初始 JNDI
dbwizard.importStatus.originalName                                 = 初始连接池名称
dbwizard.importStatus.summary                                      = 下表列出了可识别出的数据库连接池。你可以把任何普通 JDBC 连接池或者 XA 连接池部署到 Geronimo，因为 Geronimo 包含支持 XA 的适配器。下面的连接池列表是一个导入过程中的状态信息列表。
dbwizard.importStatus.title                                        = <b>导入数据库连接池</b> -- 步骤2: 检查已导入数据
dbwizard.importUpload.aboutWebLogic                                = 如果 WebLogic 8.1 和 Geronimo 安装在同一台机器，并且运行 Geronimo 的用户有 WebLogic 域目录的读取权限的话，你也可以直接指向 WebLogic 的安装和域目录。这样的好处在于导入过程能够读取数据库的密码，而如果你仅仅导入上面的<tt>config.xml</tt>，你就必须重新输入所有的密码。
dbwizard.importUpload.alternateImport                              = {0}可选导入项
dbwizard.importUpload.domainDirectoryPath                          = 域目录路径
dbwizard.importUpload.domainDirectoryPathExp                       = 请输入 WebLogic 域目录的完全路径（包含<tt>config.xml</tt>文件）。
dbwizard.importUpload.enterFullPath                                = 请输入到 <tt>weblogic81/server/lib</tt> 目录的完全路径。
dbwizard.importUpload.path                                         = 路径
dbwizard.importUpload.pleaseSelect                                 = 请选择
dbwizard.importUpload.summary                                      = 这个页面开始从其它应用服务器导入数据库连接池的过程。为了导入连接池，你需要使用下面的字段来上传其它服务器的配置文件。而我们会尽量转换这些值。并让你确认在配置文件中找到的每个连接池的配置。
dbwizard.importUpload.title                                        = <b>导入数据库连接池</b> -- 步骤1: 上传配置文件<b>
dbwizard.list.createPool                                           = 创建新的数据库连接池
dbwizard.list.deployedAs                                           = 部署为
dbwizard.list.hasDatabasePools                                     = 对下面列出的每个连接池，你可以点击<b>用法</b>链接来查看一些指导你如何在你的应用中使用连接池的示例。
dbwizard.list.noDatabasePools                                      = 不存在预定义的数据库连接池
dbwizard.list.serverWide                                           = 服务器范围
dbwizard.list.summary                                              = 这个页面列出了所有可用的数据库连接池。
dbwizard.list.usage                                                = 用法
dbwizard.selectDatabase.databaseType                               = 数据库类型
dbwizard.selectDatabase.databaseTypeExp                            = 连接池要连接到的数据库类型。
dbwizard.selectDatabase.nameOfPool                                 = 数据库连接池名称
dbwizard.selectDatabase.nameOfPoolExplanation                      = 取一个与服务器中其它数据库连接池不同的名称（名称中请不要有空格）。
dbwizard.selectDatabase.title                                      = <b>创建数据库连接池</b> -- 步骤1: 选择名称和数据库
dbwizard.selectDownload.otherJDBCDrivers                           = 这里是你可能想自己下载的其它一些 JDBC 驱动（只需要保存它们到 Geronimo/repository/ 下的某个地方即可）
dbwizard.selectDownload.selectDriver                               = 选择驱动
dbwizard.selectDownload.selectDriverExp                            = Geronimo 可以自动为你下载的驱动。
dbwizard.selectDownload.selectOtherDatabase                        = 选择其它数据库
dbwizard.selectDownload.selectPredefinedDatabase                   = 选择"预定义"的数据库
dbwizard.selectDownload.summary                                    = <p>这个页面让你自动地下载数据库的驱动器，这些驱动的 JAR 包不需要登录或注册即在线可用。</p><p><i>如果这个页面花费了很长时间下载驱动，或者在下面的下拉框中没有任何驱动，那么这可能意味着你安装的Geronimo不能连接到apache.org来获得有关驱动下载的配置文件。我们对这引起的不便非常抱歉，你可以稍后再次尝试，或者手动地安装驱动（将驱动复制到 Geronimo/repository/下的目录）。</i></p>
dbwizard.selectDownload.title                                      = <b>创建数据库连接池</b> -- 步骤2: 选择驱动，JAR，参数
dbwizard.showPlan.addToEAR                                         = 添加到EAR
dbwizard.showPlan.deployAsPartEAR                                  = 你可以部署连接池为 EAR 的一部分，而不是部署为 top-level 的数据库连接池。按照下面的步骤可以部署连接池为EAR的一部分：<ol>  <li>拷贝并粘帖部署计划到文件中</li>  <li>保存这份部署计划文件到你的EAR的顶层目录中</li>  <li>从<tt>GERONIMO_HOME/{0}</tt>中拷贝RAR文件到你的EAR的顶层目录中</li>  <li>在你的EAR中创建<tt>META-INF/geronimo-application.xml</tt>文件，其中包含类似下面的<tt>module</tt>的条目，  （替换成正确的RAR文件名称和部署计划文件的名称）：</li></ol>
dbwizard.showPlan.deployCommand                                    = 部署命令
dbwizard.showPlan.deployPool                                       = 部署连接池
dbwizard.showPlan.deployPoolFromCommandLine                        = 为了在命令行中使用部署计划来部署连接池，拷贝并粘帖上面的 XML 到文件中（如：<tt>plan-file.xml</tt>）保存它。然后执行类似下面的命令：
dbwizard.showPlan.deploymentPlan                                   = 部署计划
dbwizard.showPlan.title                                            = <b>创建数据库连接池</b> -- 显示部署计划
dbwizard.testConnection.connectedTo                                = 连接到
dbwizard.testConnection.connectionError                            = 连接出错（详情如下）
dbwizard.testConnection.deployAnyway                               = 仍然部署
dbwizard.testConnection.testAgain                                  = 再次测试
dbwizard.testConnection.testError                                  = 测试错误
dbwizard.testConnection.testResult                                 = 测试结果
dbwizard.testConnection.title                                      = <b>创建数据库连接池</b> -- 步骤 4：测试连接
dbwizard.tranql-connector-db2-xa.DatabaseName                      = 数据库名称
dbwizard.tranql-connector-db2-xa.DatabaseNameExp                   = 指定数据库服务器的名称。该名称作为连接 URL 的数据库部分。
dbwizard.tranql-connector-db2-xa.DowngradeHoldCursorsUnderXa       = Downgrade Hold Cursors
dbwizard.tranql-connector-db2-xa.DowngradeHoldCursorsUnderXaExp    = 指定与持有指针关联的锁是否会降级
dbwizard.tranql-connector-db2-xa.DriverType                        = 驱动类型
dbwizard.tranql-connector-db2-xa.DriverTypeExp                     = 用于建立到该数据源的连接的驱动类型。可选类型值为 2 或 4。默认值是类型4.
dbwizard.tranql-connector-db2-xa.Password                          = 密码
dbwizard.tranql-connector-db2-xa.PasswordExp                       = \ 
dbwizard.tranql-connector-db2-xa.PortNumber                        = 端口号
dbwizard.tranql-connector-db2-xa.PortNumberExp                     = 指定远端数据库侦听到来连接的端口号。DB2 服务器默认为50000.
dbwizard.tranql-connector-db2-xa.PreparedStatementCacheSize        = PreparedStatement缓存大小
dbwizard.tranql-connector-db2-xa.PreparedStatementCacheSizeExp     = 告诉驱动每个连接应该关联多少个PreparedStatement。默认值是不使用PreparedStatement缓存。
dbwizard.tranql-connector-db2-xa.ResultSetHoldability              = ResultSetHoldability
dbwizard.tranql-connector-db2-xa.ResultSetHoldabilityExp           = 结果集的可保存性有两个可选值 : HOLD_CURSORS_OVER_COMMIT 和 CLOSE_CURSORS_AT_COMMIT. 任何一个值可以通过 resultSetConcurrency 和 resultSetHoldability 的有效组合进行设置. 您所设置的值讲覆盖 Connection 的默认值. <br/><br/>HOLD_CURSORS_OVER_COMMIT = 1<br/>CLOSE_CURSORS_AT_COMMIT  = 2
dbwizard.tranql-connector-db2-xa.ServerName                        = 服务器名称
dbwizard.tranql-connector-db2-xa.ServerNameExp                     = DB2 驱动需要连接到的主机的名称或者 IP 地址。该项没有默认值。
dbwizard.tranql-connector-db2-xa.TraceFile                         = Trace 文件
dbwizard.tranql-connector-db2-xa.TraceFileAppend                   = TraceFileAppend
dbwizard.tranql-connector-db2-xa.TraceFileAppendExp                = 指定是累加还是覆盖 Trace 文件。该属性的类型为布尔值。默认值是 false ,意为覆盖 Trace 文件。
dbwizard.tranql-connector-db2-xa.TraceFileExp                      = 放置跟踪记录的文件名称。
dbwizard.tranql-connector-db2-xa.UserName                          = 用户名称
dbwizard.tranql-connector-db2-xa.UserNameExp                       = 用于连接到远端数据库服务器的用户 ID 的名称。
dbwizard.tranql-connector-derby-client-local.CreateDatabase        = 创建数据库
dbwizard.tranql-connector-derby-client-local.CreateDatabaseExp     = 标志位指示数据库不存在时是否要创建。
dbwizard.tranql-connector-derby-client-local.DatabaseName          = 数据库名称
dbwizard.tranql-connector-derby-client-local.DatabaseNameExp       = 要连接的数据库名称。
dbwizard.tranql-connector-derby-client-local.LoginTimeout          = 登录超时
dbwizard.tranql-connector-derby-client-local.LoginTimeoutExp       = 终止远程登录前等待的时间。
dbwizard.tranql-connector-derby-client-local.Password              = 密码
dbwizard.tranql-connector-derby-client-local.PasswordExp           = 用于建立物理连接的密码证书。
dbwizard.tranql-connector-derby-client-local.PortNumber            = 端口号
dbwizard.tranql-connector-derby-client-local.PortNumberExp         = 要连接的 IP 端口号。
dbwizard.tranql-connector-derby-client-local.ServerName            = 服务器名称
dbwizard.tranql-connector-derby-client-local.ServerNameExp         = 要连接的服务器名称。
dbwizard.tranql-connector-derby-client-local.UserName              = 用户名
dbwizard.tranql-connector-derby-client-local.UserNameExp           = 用于建立物理连接的用户名。它还建立默认的 schema ,如果省略，引擎默认设为'APP'。
dbwizard.tranql-connector-derby-client-xa.CreateDatabase           = 创建数据库
dbwizard.tranql-connector-derby-client-xa.CreateDatabaseExp        = 标志位指示数据库不存在时是否要创建。
dbwizard.tranql-connector-derby-client-xa.DatabaseName             = 数据库名称
dbwizard.tranql-connector-derby-client-xa.DatabaseNameExp          = 要连接的数据库名称。
dbwizard.tranql-connector-derby-client-xa.LoginTimeout             = 登录超时
dbwizard.tranql-connector-derby-client-xa.LoginTimeoutExp          = 终止远程登录前等待的时间。
dbwizard.tranql-connector-derby-client-xa.Password                 = 密码
dbwizard.tranql-connector-derby-client-xa.PasswordExp              = 用于建立物理连接的密码证书。
dbwizard.tranql-connector-derby-client-xa.PortNumber               = 端口号
dbwizard.tranql-connector-derby-client-xa.PortNumberExp            = 要连接的 IP 端口号。
dbwizard.tranql-connector-derby-client-xa.ServerName               = 服务器名称
dbwizard.tranql-connector-derby-client-xa.ServerNameExp            = 要连接的服务器名称。
dbwizard.tranql-connector-derby-client-xa.UserName                 = 用户名
dbwizard.tranql-connector-derby-client-xa.UserNameExp              = 用于建立物理连接的用户名。它还建立默认的 schema ,如果省略，引擎默认设为'APP'。
dbwizard.tranql-connector-derby-embed-local.CreateDatabase         = 创建数据库
dbwizard.tranql-connector-derby-embed-local.CreateDatabaseExp      = 标志位指示数据库不存在时是否要创建。
dbwizard.tranql-connector-derby-embed-local.DatabaseName           = 数据库名称
dbwizard.tranql-connector-derby-embed-local.DatabaseNameExp        = 要连接的数据库名称。
dbwizard.tranql-connector-derby-embed-local.LoginTimeout           = 登录超时
dbwizard.tranql-connector-derby-embed-local.LoginTimeoutExp        = 该配置属性当前被 Derby 忽略。
dbwizard.tranql-connector-derby-embed-local.Password               = 密码
dbwizard.tranql-connector-derby-embed-local.PasswordExp            = 用于建立物理连接的密码证书。
dbwizard.tranql-connector-derby-embed-local.ShutdownDatabase       = 关闭数据库
dbwizard.tranql-connector-derby-embed-local.ShutdownDatabaseExp    = 如果设为字符串 "shutdown"，则从数据源获得一个 java.sql.Connection 对象后关闭数据库。
dbwizard.tranql-connector-derby-embed-local.UserName               = 用户名
dbwizard.tranql-connector-derby-embed-local.UserNameExp            = 用于建立物理连接的用户名。它还建立默认的 schema ,如果省略，引擎默认设为'APP'。
dbwizard.tranql-connector-derby-embed-xa.CreateDatabase            = 创建数据库
dbwizard.tranql-connector-derby-embed-xa.CreateDatabaseExp         = 标志位指示数据库不存在时是否要创建。这是一个布尔值。
dbwizard.tranql-connector-derby-embed-xa.DatabaseName              = 数据库名称
dbwizard.tranql-connector-derby-embed-xa.DatabaseNameExp           = 要连接的数据库名称。
dbwizard.tranql-connector-derby-embed-xa.LoginTimeout              = 登录超时
dbwizard.tranql-connector-derby-embed-xa.LoginTimeoutExp           = 该配置属性当前被 Derby 忽略。
dbwizard.tranql-connector-derby-embed-xa.Password                  = 密码
dbwizard.tranql-connector-derby-embed-xa.PasswordExp               = 用于建立物理连接的密码证书。
dbwizard.tranql-connector-derby-embed-xa.UserName                  = 用户名
dbwizard.tranql-connector-derby-embed-xa.UserNameExp               = 用于建立物理连接的用户名。它还建立默认的 schema,如果省略，引擎默认设为'APP'。
dbwizard.tranql-connector-informix-xa.DatabaseName                 = 数据库名称
dbwizard.tranql-connector-informix-xa.DatabaseNameExp              = 数据库名称。
dbwizard.tranql-connector-informix-xa.IfxIFXHOST                   = IfxHost
dbwizard.tranql-connector-informix-xa.IfxIFXHOSTExp                = Informix 数据库服务器的 IP 地址或者主机名。
dbwizard.tranql-connector-informix-xa.IfxPROTOCOLTRACE             = IfxProtocolTrace
dbwizard.tranql-connector-informix-xa.IfxPROTOCOLTRACEExp          = IfxPROTOCOLTRACE 的值。
dbwizard.tranql-connector-informix-xa.IfxPROTOCOLTRACEFILE         = IfxProtocolTraceFile
dbwizard.tranql-connector-informix-xa.IfxPROTOCOLTRACEFILEExp      = IfxPROTOCOLTRACEFILE 的值。
dbwizard.tranql-connector-informix-xa.IfxSQLH_FILE                 = IfxSQLHostFile
dbwizard.tranql-connector-informix-xa.IfxSQLH_FILEExp              = IfxSQLH_FILE 的值。
dbwizard.tranql-connector-informix-xa.IfxSQLH_TYPE                 = IfxSQLHostType
dbwizard.tranql-connector-informix-xa.IfxSQLH_TYPEExp              = IfxSQLH_TYPE 的值。
dbwizard.tranql-connector-informix-xa.IfxIFX_LOCK_MODE_WAIT        = IfxLockModeWait
dbwizard.tranql-connector-informix-xa.IfxIFX_LOCK_MODE_WAITExp     = IFX_LOCK_MODE_WAIT 的值（秒）。应用程序会通过这个属性替换系统中所设定的对于被锁行或者表访问时需要等待时间的默认值。默认值为 0 秒。设置为 －1 表示会一直等到锁除结束。 设置为其他数值表示只等待相应数值的秒数。
dbwizard.tranql-connector-informix-xa.IfxIFX_XASPEC                = IfxXaspec
dbwizard.tranql-connector-informix-xa.IfxIFX_XASPECExp             = 应用程序会通过这个属性替换系统中的默认值。设置为 y 或者 Y 表示开启该属性。设置为 n 或者 N 表示关闭该属性。其他输入值会被自动忽略。该属性常用于多个用户访问同一个数据库这种情形，它有利于 XA 事务的耦合特性从而减少可能出现的事务管理错误。
dbwizard.tranql-connector-informix-xa.PreparedStatementCacheSize   = PreparedStatementCacheSize
dbwizard.tranql-connector-informix-xa.PreparedStatementCacheSizeExp= PreparedStatementCacheSize 的值。PreparedStatementCacheSize 告诉驱动程序每一个连接应该处理多少条预定义语句。默认值为 0 。
dbwizard.tranql-connector-informix-xa.Password                     = 密码
dbwizard.tranql-connector-informix-xa.PasswordExp                  = 密码（区分大小写）。
dbwizard.tranql-connector-informix-xa.PortNumber                   = 端口号
dbwizard.tranql-connector-informix-xa.PortNumberExp                = Informix 数据库服务器的端口号。
dbwizard.tranql-connector-informix-xa.ServerName                   = 服务器名称
dbwizard.tranql-connector-informix-xa.ServerNameExp                = Informix 数据库服务器的实例名称。
dbwizard.tranql-connector-informix-xa.UserName                     = 用户名
dbwizard.tranql-connector-informix-xa.UserNameExp                  = 用户名（区分大小写）。
dbwizard.tranql-connector-mysql-local.DatabaseName                 = 数据库名称
dbwizard.tranql-connector-mysql-local.DatabaseNameExp              = 要连接的数据库名称。
dbwizard.tranql-connector-mysql-local.Password                     = 密码
dbwizard.tranql-connector-mysql-local.PasswordExp                  = 用于建立物理连接的密码证书。
dbwizard.tranql-connector-mysql-local.PortNumber                   = 端口号
dbwizard.tranql-connector-mysql-local.PortNumberExp                = 要连接的 IP 端口号。
dbwizard.tranql-connector-mysql-local.ServerName                   = 服务器名称
dbwizard.tranql-connector-mysql-local.ServerNameExp                = 要连接的服务器名称。
dbwizard.tranql-connector-mysql-local.UserName                     = 用户名
dbwizard.tranql-connector-mysql-local.UserNameExp                  = 用于建立物理连接的用户名。
dbwizard.tranql-connector-mysql-xa.DatabaseName                    = 数据库名称
dbwizard.tranql-connector-mysql-xa.DatabaseNameExp                 = 要连接的数据库名称。
dbwizard.tranql-connector-mysql-xa.Password                        = 密码
dbwizard.tranql-connector-mysql-xa.PasswordExp                     = 用于建立物理连接的密码证书。
dbwizard.tranql-connector-mysql-xa.PortNumber                      = 端口号
dbwizard.tranql-connector-mysql-xa.PortNumberExp                   = 要连接的 IP 端口号。
dbwizard.tranql-connector-mysql-xa.ServerName                      = 服务器名称
dbwizard.tranql-connector-mysql-xa.ServerNameExp                   = 要连接的服务器名称。
dbwizard.tranql-connector-mysql-xa.UserName                        = 用户名
dbwizard.tranql-connector-mysql-xa.UserNameExp                     = 用于建立物理连接的用户名。
dbwizard.tranql-connector-oracle-local.DataSourceName              = 数据源名称
dbwizard.tranql-connector-oracle-local.DataSourceNameExp           = \ 
dbwizard.tranql-connector-oracle-local.DatabaseName                = 数据库名称
dbwizard.tranql-connector-oracle-local.DatabaseNameExp             = \ 
dbwizard.tranql-connector-oracle-local.Description                 = 描述
dbwizard.tranql-connector-oracle-local.DescriptionExp              = \ 
dbwizard.tranql-connector-oracle-local.DriverType                  = 驱动类型
dbwizard.tranql-connector-oracle-local.DriverTypeExp               = \ 
dbwizard.tranql-connector-oracle-local.LoginTimeout                = 登录超时
dbwizard.tranql-connector-oracle-local.LoginTimeoutExp             = \ 
dbwizard.tranql-connector-oracle-local.MaxStatements               = Statement 最大值
dbwizard.tranql-connector-oracle-local.MaxStatementsExp            = \ 
dbwizard.tranql-connector-oracle-local.NetworkProtocol             = 网络协议
dbwizard.tranql-connector-oracle-local.NetworkProtocolExp          = \ 
dbwizard.tranql-connector-oracle-local.Password                    = 密码
dbwizard.tranql-connector-oracle-local.PasswordExp                 = \ 
dbwizard.tranql-connector-oracle-local.PortNumber                  = 端口号
dbwizard.tranql-connector-oracle-local.PortNumberExp               = \ 
dbwizard.tranql-connector-oracle-local.ServerName                  = 服务器名称
dbwizard.tranql-connector-oracle-local.ServerNameExp               = \ 
dbwizard.tranql-connector-oracle-local.ServiceName                 = 服务名称
dbwizard.tranql-connector-oracle-local.ServiceNameExp              = \ 
dbwizard.tranql-connector-oracle-local.TNSEntryName                = TNS 条目名称
dbwizard.tranql-connector-oracle-local.TNSEntryNameExp             = \ 
dbwizard.tranql-connector-oracle-local.UserName                    = 用户名
dbwizard.tranql-connector-oracle-local.UserNameExp                 = \ 
dbwizard.tranql-connector-oracle-xa.DataSourceName                 = 数据源名称
dbwizard.tranql-connector-oracle-xa.DataSourceNameExp              = \ 
dbwizard.tranql-connector-oracle-xa.DatabaseName                   = 数据库名称
dbwizard.tranql-connector-oracle-xa.DatabaseNameExp                = \ 
dbwizard.tranql-connector-oracle-xa.Description                    = 描述
dbwizard.tranql-connector-oracle-xa.DescriptionExp                 = \ 
dbwizard.tranql-connector-oracle-xa.DriverType                     = 驱动类型
dbwizard.tranql-connector-oracle-xa.DriverTypeExp                  = \ 
dbwizard.tranql-connector-oracle-xa.LoginTimeout                   = 登录超时
dbwizard.tranql-connector-oracle-xa.LoginTimeoutExp                = \ 
dbwizard.tranql-connector-oracle-xa.MaxStatements                  = Statement 最大值
dbwizard.tranql-connector-oracle-xa.MaxStatementsExp               = \ 
dbwizard.tranql-connector-oracle-xa.NetworkProtocol                = 网络协议
dbwizard.tranql-connector-oracle-xa.NetworkProtocolExp             = \ 
dbwizard.tranql-connector-oracle-xa.Password                       = 密码
dbwizard.tranql-connector-oracle-xa.PasswordExp                    = \ 
dbwizard.tranql-connector-oracle-xa.PortNumber                     = 端口号
dbwizard.tranql-connector-oracle-xa.PortNumberExp                  = \ 
dbwizard.tranql-connector-oracle-xa.ServerName                     = 服务器名称
dbwizard.tranql-connector-oracle-xa.ServerNameExp                  = \ 
dbwizard.tranql-connector-oracle-xa.ServiceName                    = 服务名称
dbwizard.tranql-connector-oracle-xa.ServiceNameExp                 = \ 
dbwizard.tranql-connector-oracle-xa.TNSEntryName                   = TNS 条目名称
dbwizard.tranql-connector-oracle-xa.TNSEntryNameExp                = \ 
dbwizard.tranql-connector-oracle-xa.UserName                       = 用户名
dbwizard.tranql-connector-oracle-xa.UserNameExp                    = \ 
dbwizard.tranql-connector-postgresql-local.DatabaseName            = 数据库名称
dbwizard.tranql-connector-postgresql-local.DatabaseNameExp         = 要连接的数据库名称。
dbwizard.tranql-connector-postgresql-local.Password                = 密码
dbwizard.tranql-connector-postgresql-local.PasswordExp             = 用于建立物理连接的密码证书。
dbwizard.tranql-connector-postgresql-local.PortNumber              = 端口号
dbwizard.tranql-connector-postgresql-local.PortNumberExp           = 要连接的 IP 端口号。
dbwizard.tranql-connector-postgresql-local.PrepareThreshold        = Prepare 阈值
dbwizard.tranql-connector-postgresql-local.PrepareThresholdExp     = \ 
dbwizard.tranql-connector-postgresql-local.ServerName              = 服务器名称
dbwizard.tranql-connector-postgresql-local.ServerNameExp           = 要连接的服务器名称。
dbwizard.tranql-connector-postgresql-local.UserName                = 用户名
dbwizard.tranql-connector-postgresql-local.UserNameExp             = 用于建立物理连接的用户名。
dbwizard.tranql-connector-postgresql-xa.DatabaseName               = 数据库名称
dbwizard.tranql-connector-postgresql-xa.DatabaseNameExp            = 要连接的数据库名称。
dbwizard.tranql-connector-postgresql-xa.Password                   = 密码
dbwizard.tranql-connector-postgresql-xa.PasswordExp                = 用于建立物理连接的密码证书。
dbwizard.tranql-connector-postgresql-xa.PortNumber                 = 端口号
dbwizard.tranql-connector-postgresql-xa.PortNumberExp              = 要连接的 IP 端口号。
dbwizard.tranql-connector-postgresql-xa.PrepareThreshold           = Prepare 阈值
dbwizard.tranql-connector-postgresql-xa.PrepareThresholdExp        = \ 
dbwizard.tranql-connector-postgresql-xa.ServerName                 = 服务器名称
dbwizard.tranql-connector-postgresql-xa.ServerNameExp              = 要连接的服务器名称。
dbwizard.tranql-connector-postgresql-xa.UserName                   = 用户名
dbwizard.tranql-connector-postgresql-xa.UserNameExp                = 用于建立物理连接的用户名。
dbwizard.tranql-connector-sqlserver2000-xa.DatabaseName            = 数据库名称
dbwizard.tranql-connector-sqlserver2000-xa.DatabaseNameExp         = 要连接的 SQL Server 数据库名称。
dbwizard.tranql-connector-sqlserver2000-xa.Password                = 密码
dbwizard.tranql-connector-sqlserver2000-xa.PasswordExp             = 用于连接 SQL Server 数据库的区分大小写的密码。
dbwizard.tranql-connector-sqlserver2000-xa.PortNumber              = 端口号
dbwizard.tranql-connector-sqlserver2000-xa.PortNumberExp           = SQL Server 的 TCP 端口，默认为 1433。
dbwizard.tranql-connector-sqlserver2000-xa.SelectMethod            = SelectMethod
dbwizard.tranql-connector-sqlserver2000-xa.SelectMethodExp         = SelectMethod={cursor | direct}.查阅微软文档以获得更多信息，Direct 不能用于受管环境中。
dbwizard.tranql-connector-sqlserver2000-xa.SendStringParameters    = SendStringParameters
dbwizard.tranql-connector-sqlserver2000-xa.SendStringParametersExp = SendStringParametersAsUnicode={true | false}。查阅微软文档以获得细节。默认是true，这不大会导致编码冲突但在一些环境下可能会略微慢一些。
dbwizard.tranql-connector-sqlserver2000-xa.ServerName              = 服务器名称
dbwizard.tranql-connector-sqlserver2000-xa.ServerNameExp           = SQL Server 的 IP 地址。
dbwizard.tranql-connector-sqlserver2000-xa.UserName                = 用户名
dbwizard.tranql-connector-sqlserver2000-xa.UserNameExp             = 用于连接 SQL Server 数据库的区分大小写的用户名。
dbwizard.tranql-connector-sqlserver2005-xa.DatabaseName            = 数据库名称
dbwizard.tranql-connector-sqlserver2005-xa.DatabaseNameExp         = 要连接的 SQL Server 数据库名称。
dbwizard.tranql-connector-sqlserver2005-xa.Password                = 密码
dbwizard.tranql-connector-sqlserver2005-xa.PasswordExp             = 用于连接 SQL Server 数据库的区分大小写的密码。
dbwizard.tranql-connector-sqlserver2005-xa.PortNumber              = 端口号
dbwizard.tranql-connector-sqlserver2005-xa.PortNumberExp           = SQL Server 的 TCP 端口，默认为 1433。
dbwizard.tranql-connector-sqlserver2005-xa.SelectMethod            = SelectMethod
dbwizard.tranql-connector-sqlserver2005-xa.SelectMethodExp         = SelectMethod={cursor | direct}.查阅微软文档以获得更多信息，Direct 不能用于受管环境中。
dbwizard.tranql-connector-sqlserver2005-xa.SendStringParameters    = SendStringParameters
dbwizard.tranql-connector-sqlserver2005-xa.SendStringParametersExp = SendStringParametersAsUnicode={true | false}。查阅微软文档以获得细节。默认是true，这不大会导致编码冲突但在一些环境下可能会略微慢一些。
dbwizard.tranql-connector-sqlserver2005-xa.ServerName              = 服务器名称
dbwizard.tranql-connector-sqlserver2005-xa.ServerNameExp           = SQL Server 的 IP 地址。
dbwizard.tranql-connector-sqlserver2005-xa.UserName                = 用户名
dbwizard.tranql-connector-sqlserver2005-xa.UserNameExp             = 用于连接 SQL Server 数据库的区分大小写的用户名。
dbwizard.usage.applicationCode                                     = 应用代码
dbwizard.usage.geronimo_webExp                                     = <p>要把资源引用指向 Gernimo 中特定的数据库连接池，Web应用中需要有<tt>geronimo-web.xml</tt>部署计划。它可以打包在 WAR 包中的<tt>WEB-INF</tt>目录，也可以在命令行中将它单独提供给部署工具。<tt>geronimo-web.xml</tt>部署计划中有<tt>dependency</tt>元素可以用来指向数据库连接池模块，和对应于于上面<tt>web.xml</tt>的 <tt>resource-ref</tt>的<tt>resource-ref</tt>块，它用来把资源引用指向特定的数据库连接池。在这个块中<tt>ref-name</tt>必须与<tt>web.xml</tt> 中的<tt>resource-link</tt>相一致。<tt>resource-link</tt>在名称上必须与服务器中定义的数据库连接池名称相一致。</p><p><i>如果你在Geronimo中只部署了一个名叫{0}的数据库连接池，你可以像下面一样指向连接池。</i></p>
dbwizard.usage.moreThanOnePool                                     = 如果你有多于一个的连接池叫做：{0}(举例来说,有两个依赖项，<b>每个</b>都包含一个叫{0}的组件),那么你可以像下面一样更精确地定义要使用的连接池：
dbwizard.usage.resource_refSection                                 = <tt>web.xml</tt>中有一个<tt>resource-ref</tt>段可以用来象下面一样声明数据库连接池。注意：我们使用<tt>res-ref-name</tt>映射到服务器中定义的连接池的引用。在应用中使用<tt>res-ref-name</tt>的值来访问连接池。
dbwizard.usage.searchOnlyOne                                       = 这会在当前应用中查找一个名为{0} 的数据库连接池和任何列为依赖项的模块（以及这些依赖项的依赖项等等）。
dbwizard.usage.title                                               = 这个页面介绍了怎样在 Java EE 应用中使用数据库连接池{0}。这里以 Web 应用为例，其它应用模块也应该可以用同样的方式处理。
dbwizard.usage.usingInCode                                         = 要获得指向数据库连接池的引用，在你的应用中应该使用类似下面的代码。注意：你的 JNDI 字符串应该是<tt>java:comp/env/</tt>再加<tt>web.xml</tt>中的<tt>res-ref-name</tt>。

derbylogmanager.help.title                 = 这个 portle t显示了 Geronimo 内嵌数据库 Derby 的日志信息。
derbylogmanager.view.Lines                 = 行
derbylogmanager.view.containingText        = 包含文字
derbylogmanager.view.filterLog             = 过滤日志
derbylogmanager.view.filterResults         = 过滤结果
derbylogmanager.view.integer               = 焦点所在字段必须为整数。
derbylogmanager.view.matchCriterial        = 在日志文件中总共有 {0} 条信息，与条件匹配的有 {1} 条。
derbylogmanager.view.maxResults            = 最多显示
derbylogmanager.view.noEntries             = 没有找到符合条件的信息。
derbylogmanager.view.numberOfResultsCapped = 覆盖的结果数
derbylogmanager.view.refresh               = 刷新
derbylogmanager.view.to                    = 到

internaldb.common.DB                          = 数据库
internaldb.common.DBMajorVersion              = 数据库高版本号
internaldb.common.DBMinorVersion              = 数据库低版本号
internaldb.common.DBProductName               = 数据库产品名
internaldb.common.DBProductVersion            = 数据库产品版本
internaldb.common.Item                        = 项
internaldb.common.JDBCMajorVersion            = JDBC 高版本号
internaldb.common.JDBCMinorVersion            = JDBC 低版本号
internaldb.common.SQLCommands                 = SQL 命令
internaldb.common.SQLStateType                = SQL 语句类型
internaldb.common.Value                       = 值
internaldb.common.application                 = 应用
internaldb.common.create                      = 创建
internaldb.common.createDB                    = 创建数据库
internaldb.common.databases                   = 数据库
internaldb.common.defaultTransactionIsolation = 默认事务隔离级别
internaldb.common.delete                      = 删除
internaldb.common.deleteDB                    = 删除数据库
internaldb.common.driver                      = 驱动
internaldb.common.driverMajorVersion          = 驱动高版本号
internaldb.common.driverMinorVersion          = 驱动低版本号
internaldb.common.driverName                  = 驱动名
internaldb.common.driverVersion               = 驱动版本
internaldb.common.empty                       = 空
internaldb.common.emptyText                   = 焦点所在字段不能为空。
internaldb.common.etc                         = 其它
internaldb.common.functions                   = 函数
internaldb.common.note                        = 注意
internaldb.common.numericFunctions            = 数字函数
internaldb.common.queryResult                 = 查询结果
internaldb.common.readOnly                    = 只读
internaldb.common.result                      = 结果
internaldb.common.resultSetHoldability        = 结果集的保持力
internaldb.common.schemas                     = 模式
internaldb.common.stringFunctions             = 字符串函数
internaldb.common.supportedSQLKeywords        = 支持的 SQL 关键字
internaldb.common.supportedTypes              = 支持的类型
internaldb.common.system                      = 系统
internaldb.common.systemFunctions             = 系统函数
internaldb.common.table                       = 表
internaldb.common.tableTypes                  = 表类型
internaldb.common.tables                      = 表
internaldb.common.timeDateFunctions           = 时间/日期函数
internaldb.common.useDB                       = 使用数据库
internaldb.common.useDS                       = 使用数据源
internaldb.common.userName                    = 用户名
internaldb.common.viewContents                = 查看内容
internaldb.common.viewDatabases               = 查看数据库
internaldb.common.viewTables                  = 查看表
internaldb.dbViewerHelp.content               = 显示所有可用的数据库，以及数据库中的表和表的内容。要查看数据库中的表，在主窗口中，点击数据库的链接。这会显示数据库中的所有表。要查看表中的内容，点击"查看内容"链接，在"查看数据库"面板的底部，有一些链接用于把用户带到其它视图。比如："查看数据库"和/或"查看表"。
internaldb.internalDBHelp.content             = 这个页面提供了内部数据库的信息，比如：产品名称，数据库版本，支持的函数，支持的 SQL 命令等等。滚动页面到底部去查看所有信息。
internaldb.listDatabases.nodatabases          = 没有数据库
internaldb.listDatabases.title                = 数据库列表
internaldb.listTables.noTables                = 没有表
internaldb.runSQLHelp.createDBExp             = 输入要新创建的数据库的名称，然后点击&quot;创建&quot;按钮。
internaldb.runSQLHelp.deleteDBExp             = 要删除一个已经存在的数据库，请从下拉框中选择它，并点击&quot;删除.&quot;。
internaldb.runSQLHelp.runSQLExp               = 在" SQL 命令"文本框中，输入用分号分割的 SQL 命令，点击"运行 SQL"按钮来运行 SQL 命令。
internaldb.runSQLHelp.summary                 = 允许用户使用SQL命令直接操作表中的数据，并且创建或删除数据库。在&quot;SQL 命令&quot;文本框中，用户可以输入 SQL 命令,并点击&quot;运行 SQL.&quot;
internaldb.runSQLHelp.useDBExp                = 从下拉框中选择要操作的数据库
internaldb.runSQLHelp.useDSExp                = 从下拉框中选择要操作的数据源
internaldb.runSQLNormal.note1                 = 1) 使用;分开多个语句
internaldb.runSQLNormal.note2                 = 2) 单个 Select 语句的查询结果会被显示
internaldb.runSQLNormal.note3                 = 3) 使用单引号括住文本字符串
internaldb.runSQLNormal.reallyDeleteDatabase  = 确定要删除这个数据库么？
internaldb.runSQLNormal.runSQL                = 运行SQL
