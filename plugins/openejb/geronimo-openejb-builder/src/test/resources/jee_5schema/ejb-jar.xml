<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<!-- $Rev: 496460 $ $Date: 2007-01-15 12:11:17 -0800 (Mon, 15 Jan 2007) $ -->

<ejb-jar xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                  http://java.sun.com/xml/ns/javaee/ejb-jar_3_0.xsd"
         version="3.0" metadata-complete="true">

  <description>
    This ejb-jar file contains assembled enterprise beans that are
    part of employee self-service application.
  </description>

  <enterprise-beans>
    <!--
    ########################################################
    ########################################################
    ######  CMP   E N T I T Y   B E A N S  #################
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/BasicCmpHome
    ########################################################
    -->

    <entity>
      <description>
        The EmployeeRecord entity bean encapsulates access
        to the employee records.The deployer will use
        container-managed persistence to integrate the
        entity bean with the back-end system managing
        the employee records.
      </description>
      <ejb-name>BasicCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.BasicCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <cmp-version>1.x</cmp-version>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <resource-ref>
        <description>This is a reference to a JDBC database.</description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp2/BasicCmpHome
    ########################################################
    -->

    <entity>
      <ejb-name>BasicCmp2Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.BasicCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <cmp-version>2.x</cmp-version>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>id</primkey-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <resource-ref>
        <description>This is a reference to a JDBC database.</description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/allowed_operations/EntityHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>AOBasicCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.AllowedOperationsCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <cmp-version>1.x</cmp-version>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp2/allowed_operations/EntityHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>AOBasicCmp2Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.AllowedOperationsCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <cmp-version>2.x</cmp-version>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>id</primkey-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/EncBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>EncCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.EncCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <cmp-version>1.x</cmp-version>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>entity/cmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/cmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
        <ejb-link>BasicCmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp2/EncBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>EncCmp2Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.EncCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <cmp-version>2.x</cmp-version>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>id</primkey-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <env-entry>
        <env-entry-name>entity/cmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/cmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
        <ejb-link>BasicCmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/ContextLookupCmpBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>ContextLookupCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.ContextLookupCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>entity/cmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/cmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
        <ejb-link>BasicCmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>Cmp RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.RmiIiopCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.RmiIiopCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.RmiIiopCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <cmp-version>1.x</cmp-version>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <ejb-ref>
        <ejb-ref-name>cmp/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
        <ejb-link>EncCmpBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp2/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>Cmp2 RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.RmiIiopCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.RmiIiopCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.RmiIiopCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <cmp-version>2.x</cmp-version>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>id</primkey-field>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <ejb-ref>
        <ejb-ref-name>cmp/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
        <ejb-link>EncCmpBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ########################################################
    ######  CMR   T E S T   B E A N S  #####################
    ########################################################
    ########################################################
    -->

    <entity>
      <ejb-name>OneToOneA</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetoone.ALocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetoone.ALocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetoone.ABean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>OneToOneA</abstract-schema-name>
      <cmp-field>
        <field-name>field1</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field2</field-name>
      </cmp-field>
      <primkey-field>field1</primkey-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.deployment.entity.cmr.CompoundPK</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(A) FROM OneToOneA A</ejb-ql>
      </query>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>
    <entity>
      <ejb-name>OneToOneB</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetoone.BLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetoone.BLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetoone.BBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>OneToOneB</abstract-schema-name>
      <cmp-field>
        <field-name>field1</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field2</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field3</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field4</field-name>
      </cmp-field>
      <primkey-field>field1</primkey-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.deployment.entity.cmr.CompoundPK</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(B) FROM OneToOneB B</ejb-ql>
      </query>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <entity>
      <ejb-name>OneToManyA</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetomany.ALocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetomany.ALocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetomany.ABean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>OneToOneA</abstract-schema-name>
      <cmp-field>
        <field-name>field1</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field2</field-name>
      </cmp-field>
      <primkey-field>field1</primkey-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.deployment.entity.cmr.CompoundPK</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(A) FROM OneToManyA A</ejb-ql>
      </query>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>
    <entity>
      <ejb-name>OneToManyB</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetomany.BLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetomany.BLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetomany.BBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>OneToOneB</abstract-schema-name>
      <cmp-field>
        <field-name>field1</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field2</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field3</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field4</field-name>
      </cmp-field>
      <primkey-field>field1</primkey-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.deployment.entity.cmr.CompoundPK</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(B) FROM OneToManyB B</ejb-ql>
      </query>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <entity>
      <ejb-name>OneOwningSideBean</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.cmrmapping.OneOwningSideLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.cmrmapping.OneOwningSideLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.cmrmapping.OneOwningSideBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <!--<prim-key-class>org.apache.openejb.test.entity.cmr.cmrmapping.CompoundPK</prim-key-class>-->
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Order</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field1</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <entity>
      <ejb-name>OneInverseSideBean</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.cmrmapping.OneInverseSideLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.cmrmapping.OneInverseSideLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.cmrmapping.OneInverseSideBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Order</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <entity>
      <ejb-name>ManyOwningSideBean</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.cmrmapping.ManyOwningSideLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.cmrmapping.ManyOwningSideLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.cmrmapping.ManyOwningSideBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <!--<prim-key-class>org.apache.openejb.test.entity.cmr.cmrmapping.CompoundPK</prim-key-class>-->
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Order</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field1</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <query-method>
          <method-name>ejbSelectSomething</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT m.oneInverseSide FROM Order m WHERE m.id = ?1</ejb-ql>
      </query>
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ########################################################
    ####  S T A T E F U L   S E S S I O N   B E A N S  #####
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/stateful/BasicStatefulHome
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with contianer-managed
        transaction demarcation that implements the
        javax.ejb.SessionSynchronization interface.
      </description>
      <ejb-name>BasicStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.BasicStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Container</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/BasicStatefulPojoHome
    ########################################################
    -->

    <session>
      <description>
        A basic stateful session pojo bean with container-managed transaction demarcation.
      </description>
      <ejb-name>BasicStatefulPojoBean</ejb-name>
      <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
      <local-home>org.apache.openejb.test.stateful.BasicStatefulLocalHome</local-home>
      <local>org.apache.openejb.test.stateful.BasicStatefulLocalObject</local>
      <ejb-class>org.apache.openejb.test.stateful.BasicStatefulPojoBean</ejb-class>
      <business-local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</business-local>
      <business-remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</business-remote>
      <session-type>Stateful</session-type>
      <transaction-type>Container</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/BeanManagedBasicStatefulHome
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>Basic BMT StatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.BMTStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/BeanManagedTransactionTests/EJBHome
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>BMT StatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.BeanTxStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.BeanTxStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.BeanTxStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/EncBean
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>EncStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.EncStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>      
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/ExtendedTestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <persistence-context-type>Extended</persistence-context-type>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/ContextLookupStatefulBean
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>ContextLookupStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.ContextLookupStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>            
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/ExtendedTestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <persistence-context-type>Extended</persistence-context-type>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/ContextLookupStatefulPojoBean
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>ContextLookupStatefulPojoBean</ejb-name>
      <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.ContextLookupStatefulPojoBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>            
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/ExtendedTestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <persistence-context-type>Extended</persistence-context-type>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <session>
      <description>
        The stateful bean for the RMI-IIOP Tests
      </description>
      <ejb-name>Stateful RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.stateful.RmiIiopStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.RmiIiopStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.RmiIiopStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <ejb-ref>
        <ejb-ref-name>stateful/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.EncStatefulBean</remote>
        <ejb-link>EncStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ########################################################
    ###  S T A T E L E S S   S E S S I O N   B E A N S  ####
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/stateless/BasicStatelessHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session bean with contianer-managed
        transaction demarcation.
      </description>
      <ejb-name>BasicStatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.BasicStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Container</transaction-type>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>BigWig</role-name>
        <role-link>Teller</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/BasicStatelessPojoHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session pojo bean with contianer-managed
        transaction demarcation.
      </description>
      <ejb-name>BasicStatelessPojoBean</ejb-name>
      <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
      <local-home>org.apache.openejb.test.stateless.BasicStatelessLocalHome</local-home>
      <local>org.apache.openejb.test.stateless.BasicStatelessLocalObject</local>
      <business-local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</business-local>
      <business-remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</business-remote>
      <ejb-class>org.apache.openejb.test.stateless.BasicStatelessPojoBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Container</transaction-type>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>BigWig</role-name>
        <role-link>Teller</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/BeanManagedBasicStatelessHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>Basic BMT StatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.BasicStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>BigWig</role-name>
        <role-link>Teller</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tools/DatabaseHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>DatabaseBean</ejb-name>
      <home>org.apache.openejb.test.beans.DatabaseHome</home>
      <remote>org.apache.openejb.test.beans.Database</remote>
      <ejb-class>org.apache.openejb.test.beans.DatabaseBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>BigWig</role-name>
        <role-link>Teller</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>database</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/BeanManagedTransactionTests/EJBHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>BMT StatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.BeanTxStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.BeanTxStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.BeanTxStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>BigWig</role-name>
        <role-link>Teller</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>database</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/EncBean
    ########################################################
    -->

    <session>
      <description>
        The stateless bean for the JNDI ENC tests
      </description>
      <ejb-name>EncStatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.EncStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/ContextLookupStatelessBean
    ########################################################
    -->

    <session>
      <description>
        The stateless bean for the JNDI ENC tests
      </description>
      <ejb-name>ContextLookupStatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.ContextLookupStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>            
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/ContextLookupStatelessPojoBean
    ########################################################
    -->

    <session>
      <description>
        The stateless bean for the JNDI ENC tests
      </description>
      <ejb-name>ContextLookupStatelessPojoBean</ejb-name>
      <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.ContextLookupStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>            
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <session>
      <description>
        The stateless bean for the RMI-IIOP Tests
      </description>
      <ejb-name>Stateless RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.stateless.RmiIiopStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.RmiIiopStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.RmiIiopStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <ejb-ref>
        <ejb-ref-name>stateless/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.EncStatelessBean</remote>
        <ejb-link>EncStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ########################################################
    ######  BMP   E N T I T Y   B E A N S  #################
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/BasicBmpHome
    ########################################################
    -->

    <entity>
      <description>
        The EmployeeRecord entity bean encapsulates access
        to the employee records.The deployer will use
        container-managed persistence to integrate the
        entity bean with the back-end system managing
        the employee records.
      </description>
      <ejb-name>BasicBmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.BasicBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/allowed_operations/EntityHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>AOBasicBmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.AllowedOperationsBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/EncBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>EncBmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.EncBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.EncBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.EncBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>entity/bmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/ContextLookupBmpBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>ContextLookupBmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.EncBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.EncBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.ContextLookupBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>entity/bmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>Bmp RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.RmiIiopBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.RmiIiopBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.RmiIiopBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <ejb-ref>
        <ejb-ref-name>bmp/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.EncBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.EncBmpObject</remote>
        <ejb-link>EncBmpBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ########################################################
    #########  MESSAGE   D R I V E N    B E A N S  #########
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/messagedriven/mdb/BasicMdbHome
    ########################################################
    -->

    <message-driven>
      <description>
        Blah blah blah . . .
      </description>
      <ejb-name>BasicMdbBean</ejb-name>
      <ejb-class>org.apache.openejb.test.mdb.BasicMdbBean</ejb-class>
      <messaging-type>javax.jms.MessageListener</messaging-type>
      <transaction-type>Container</transaction-type>
      <message-destination-type>javax.jms.Queue</message-destination-type>
      <message-destination-link>SendReceiveQueue</message-destination-link>
      <activation-config>
        <activation-config-property>
          <activation-config-property-name>destination</activation-config-property-name>
          <activation-config-property-value>SendReceiveQueue</activation-config-property-value>
        </activation-config-property>
      </activation-config>
    </message-driven>
  </enterprise-beans>

  <relationships>
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <cascade-delete/>
        <relationship-role-source>
          <ejb-name>OneToOneA</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>b</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneToOneB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>a</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneToManyA</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>b</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
        <cascade-delete/>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>OneToManyB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>a</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneToManyA</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>bNonCascade</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>OneToManyB</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>aNonCascade</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneOwningSideBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>oneInverseSide</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneInverseSideBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>oneOwningSide</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>ManyOwningSideBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>oneInverseSide</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneInverseSideBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>manyOwningSide</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
  </relationships>

  <assembly-descriptor>
    <security-role>
      <description>The description</description>
      <role-name>Teller</role-name>
    </security-role>
    <security-role>
      <description>The description</description>
      <role-name>Manager</role-name>
    </security-role>
    <security-role>
      <description>The description</description>
      <role-name>Accountant</role-name>
    </security-role>
    <security-role>
      <description>The description</description>
      <role-name>Executive</role-name>
    </security-role>

    <method-permission>
      <description>The description</description>
      <role-name>Teller</role-name>
      <method>
        <description>The description</description>
        <ejb-name>BasicStatelessBean</ejb-name>
        <method-name>remove</method-name>
      </method>
    </method-permission>

    <method-permission>
      <description>The description</description>
      <role-name>Accountant</role-name>
      <role-name>Manager</role-name>
      <method>
        <description>The description</description>
        <ejb-name>BasicStatefulBean</ejb-name>
        <method-name>*</method-name>
      </method>
    </method-permission>

    <container-transaction>
      <method>
        <ejb-name>BasicStatefulBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>BasicStatelessBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>BasicCmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AOBasicCmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>EncCmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>Cmp RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>

    <!-- CMR Test Beans -->
    <container-transaction>
      <method>
        <ejb-name>OneToOneA</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OneToOneB</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OneToManyA</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OneToManyB</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OneOwningSideBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OneInverseSideBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ManyOwningSideBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>EncStatefulBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>Stateful RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Never</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>DatabaseBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>EncStatelessBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>Stateless RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Never</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>BasicBmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AOBasicBmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>EncBmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>Bmp RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Never</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>BasicMdbBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
  </assembly-descriptor>
</ejb-jar>
